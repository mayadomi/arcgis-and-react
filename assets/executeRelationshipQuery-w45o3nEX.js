import{f as l}from"./utils-nisnNviQ.js";import{U as p,cO as y}from"./index-BdlI2FVT.js";import{t as j}from"./query-gDdM8KJG.js";import{d as R}from"./FeatureSet-BVXviJDD.js";import m from"./RelationshipQuery-BllPoPyE.js";import"./normalizeUtils-Cik6ve5l.js";import"./normalizeUtilsCommon-Cpq7p5az.js";import"./pbfQueryUtils-2_EOj78-.js";import"./pbf-vQQtfZjw.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryZScale-DxngEzoS.js";import"./projection-NmY8Pkrx.js";import"./Field-CcwrtZjp.js";import"./fieldType-CHp3lv4g.js";import"./Query-C67dhdyp.js";import"./commonProperties-DDhb4E0s.js";function F(r,t){const e=r.toJSON();return e.objectIds&&(e.objectIds=e.objectIds.join(",")),e.orderByFields&&(e.orderByFields=e.orderByFields.join(",")),e.outFields&&!(t!=null&&t.returnCountOnly)?e.outFields.includes("*")?e.outFields="*":e.outFields=e.outFields.join(","):delete e.outFields,e.outSR&&(e.outSR=y(e.outSR)),e.dynamicDataSource&&(e.layer=JSON.stringify({source:e.dynamicDataSource}),delete e.dynamicDataSource),e}async function b(r,t,e){const n=await f(r,t,e),o=n.data,s=o.geometryType,a=o.spatialReference,i={};for(const c of o.relatedRecordGroups){const d={fields:void 0,objectIdFieldName:void 0,geometryType:s,spatialReference:a,hasZ:!!o.hasZ,hasM:!!o.hasM,features:c.relatedRecords};if(c.objectId!=null)i[c.objectId]=d;else for(const u of Object.keys(c))u!=="relatedRecords"&&(i[c[u]]=d)}return{...n,data:i}}async function h(r,t,e){const n=await f(r,t,e,{returnCountOnly:!0}),o=n.data,s={};for(const a of o.relatedRecordGroups)a.objectId!=null&&(s[a.objectId]=a.count);return{...n,data:s}}async function f(r,t,e={},n){const o=j({...r.query,f:"json",...n,...F(t,n)});return p(r.path+"/queryRelatedRecords",{...e,query:{...e.query,...o}})}async function Q(r,t,e){t=m.from(t);const n=l(r);return b(n,t,e).then(o=>{const s=o.data,a={};return Object.keys(s).forEach(i=>a[i]=R.fromJSON(s[i])),a})}async function T(r,t,e){t=m.from(t);const n=l(r);return h(n,t,{...e}).then(o=>o.data)}export{Q as executeRelationshipQuery,T as executeRelationshipQueryForCount};
