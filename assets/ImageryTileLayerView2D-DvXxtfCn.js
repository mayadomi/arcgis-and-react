import{e9 as U,aY as ae,f as h,y as p,g as M,S as pe,k as fe,b6 as ge,b3 as _e,d as $,b as F,h as D,s as Q,o as ye,J as xe,P as be}from"./index-BdlI2FVT.js";import{o as H}from"./multidimensionalUtils-Bb9hJZBL.js";import{f as we,d as ve,a as Te}from"./RasterVFDisplayObject-Dhf3A6sk.js";import{a as Pe,m as Se,u as Re}from"./LayerView-D4u4EJ0S.js";import{e as z,m as Ie}from"./map-CoC24dow.js";import{o as Ue,M as A,h as $e,b as Fe,i as ne,r as Ce}from"./mat3-e0AQhzgy.js";import{t as L}from"./vec2f32-BbH2jxlN.js";import{i as ze,E as O,r as oe}from"./Container-2mGzxoHB.js";import{L as q,P as Me,U as Ve,D as Be,R as k,O as J}from"./enums-CYMvjYBC.js";import{c as Le,f as ke,m as Y,O as I,h as v,_ as j,A as De,p as Ge,l as Oe,T as Ee,g as Ae}from"./rasterUtils-zVYOegL7.js";import{a as X}from"./vec2f64-CaE_5U6X.js";import{e as qe,m as je}from"./Texture-p7xZY2dS.js";import{a as C}from"./definitions-C14Q9bsB.js";import{t as We,a as K,r as le}from"./WGLContainer-C7UTPXjP.js";import{x as Ne}from"./Program-BT4psGrM.js";import{i as ue}from"./TileContainer-SsCW_SqX.js";import{h as Qe}from"./UpdatingHandles-DjmbdLdJ.js";import{u as He,S as Je}from"./dataUtils-s2c4B_PB.js";import{j as Z}from"./TileInfo-dXrVrRwv.js";import{g as ee,a as te,i as Ye,u as Xe}from"./RawBlockCache-C0pY9mVR.js";import{D as Ke,a as Ze,s as re,v as et}from"./rasterProjectionHelper-CsVr1An-.js";import{r as se,h as tt,m as rt}from"./HighlightOptions-UfuqKf1Y.js";import"./TileKey-D5-VD3yk.js";import{a as st}from"./capabilities-C84AMSCg.js";import{j as it}from"./commonProperties-DDhb4E0s.js";import{p as at}from"./popupUtils-DVZLIYmh.js";import{i as nt}from"./RefreshableLayerView-ciuZtHLB.js";import"./ProgramTemplate-DU_rpBUQ.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./LabelMetric-CfMDGQiE.js";import"./enums-BRqP_wXA.js";import"./scaleUtils-DaNVMeZM.js";import"./Basemap-CgzecouK.js";import"./loadAll-d4sPuW9e.js";import"./PortalItem-D_imZ4F9.js";import"./writeUtils-BJozxT0a.js";import"./layerUtils-C0ByrsCg.js";import"./compilerUtils-vO2blZnn.js";import"./CollectionFlattener-CM1KduCr.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CSxAPr-6.js";import"./TablesMixin-osra4OQn.js";import"./Layer-CcYrbAYa.js";import"./Cyclical-DUB0vV49.js";import"./workers-BoWLbb4j.js";import"./projection-NmY8Pkrx.js";import"./themeUtils-B9K1g8Wn.js";import"./uuid-fwrPAdZb.js";import"./signal-yOcmJBqC.js";import"./GraphicsCollection-BMGOUijs.js";import"./HeightModelInfo-B2Y4TPgv.js";import"./QueueProcessor-tmTJ5qZx.js";import"./Query-C67dhdyp.js";import"./Field-CcwrtZjp.js";import"./fieldType-CHp3lv4g.js";import"./portalItemUtils-CCKlXC6h.js";import"./ViewingMode-HRfKv6NR.js";import"./unitBezier-BX6NeAEr.js";import"./vec2-DEIrm0UN.js";import"./normalizeUtils-Cik6ve5l.js";import"./normalizeUtilsCommon-Cpq7p5az.js";import"./utils-nisnNviQ.js";import"./FeatureLayer-jETWI0X3.js";import"./UniqueValueRenderer-7uqoe5qH.js";import"./ColorStop-BjodVbhP.js";import"./diffUtils-Cvmld_nE.js";import"./colorRamps-CSdC0saB.js";import"./styleUtils-DHuQZmH8.js";import"./jsonUtils-BIPVkO8e.js";import"./LRUCache-CZ2xYNgP.js";import"./Version-Cllr3DhQ.js";import"./FieldsIndex-BZm6eFTZ.js";import"./UnknownTimeZone-BLIgHyqR.js";import"./colorUtils-K6WWckc_.js";import"./vec42-DpHkGCNS.js";import"./vec4f64-CCf6w8sj.js";import"./heatmapUtils-Xd5ASPFI.js";import"./MultiOriginJSONSupport-BP0y40tB.js";import"./FormTemplate-Fi3tdScn.js";import"./editsZScale-Csrkyd4Q.js";import"./queryZScale-DxngEzoS.js";import"./FeatureSet-BVXviJDD.js";import"./APIKeyMixin-Cr6SPtKV.js";import"./ArcGISService-B0MFY8rl.js";import"./BlendLayer-CCBI54kf.js";import"./CustomParametersMixin-B15dM9ne.js";import"./EditBusLayer-BMIf9G9a.js";import"./FeatureEffectLayer-BThrs5AW.js";import"./FeatureLayerBase-DLhTJN_m.js";import"./featureLayerUtils-ecDuVTtZ.js";import"./AttachmentQuery-CmVGfcPE.js";import"./RelationshipQuery-BllPoPyE.js";import"./LayerFloorInfo-CAYEpzeH.js";import"./serviceCapabilitiesUtils-CcOSoojL.js";import"./FeatureReductionLayer-hLfjwizl.js";import"./FeatureReductionSelection-B0n0R-D3.js";import"./LabelClass-1tjVzjjL.js";import"./defaults-xH7YtUqE.js";import"./defaultsJSON-CHAaurhX.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-BvVMmVx0.js";import"./OrderedLayer-DupPBghv.js";import"./PortalLayer-Ce7CgRR0.js";import"./RefreshableLayer-DgZkcGPN.js";import"./ScaleRangeLayer-B24df4gL.js";import"./TemporalLayer-BLPwEJby.js";import"./TimeInfo-BBnCNS7R.js";import"./FeatureTemplate-BXMIhaq_.js";import"./FeatureType-CW1OCJu1.js";import"./fieldProperties-BRDCz7QD.js";import"./labelingInfo-Dio46WYR.js";import"./versionUtils-DcsImNVm.js";import"./styleUtils-CiyELj_N.js";import"./TopFeaturesQuery-o_i6H2-K.js";import"./popupUtils-fsRna_vH.js";import"./interfaces-CL2NbQte.js";import"./highlightReasons-DJwsG8nn.js";import"./StyleDefinition-pu9RBNlY.js";import"./config-MDUrh2eL.js";import"./earcut-BqgeR2O3.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./featureConversionUtils-DuXJe-nV.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./quickselect-D0_cvEX6.js";const ot={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class lt extends ze{constructor(e=null,t=null,s=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=t,this.interpolation=s}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(e){this._processedTexture!==e&&(this._disposeTextures(!0),this._processedTexture=e)}get rasterTexture(){return this._rasterTexture}set rasterTexture(e){var t;this._rasterTexture!==e&&((t=this._rasterTexture)==null||t.dispose(),this._rasterTexture=e),e==null&&(this.projected=!1)}get processed(){return this._processed}set processed(e){this._processed=e,e||(U(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||ot}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0,this.commonUniforms=null)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.commonUniforms=null,this.projected=!1,this.invalidateTexture())}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdsChanged(e)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode(this._getTextureSamplingMethod(e||"nearest")==="bilinear"?q.LINEAR:q.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid!==e&&(this._transformGrid=e,this._transformGridTexture=U(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(e=!1){var s,i;const t=e||this.projected;return[t?this.width:((s=this.source)==null?void 0:s.width)||this.width,t?this.height:((i=this.source)==null?void 0:i.height)||this.height]}getRasterCellSize(){var i;const e=(i=this.rawPixelData)==null?void 0:i.srcPixelSize,{projected:t,resolution:s}=this;return e&&!t?[e.x,e.y]:[s,s]}_createTransforms(){return{displayViewScreenMat3:z()}}setTransform(e){const t=Ue(this.transforms.displayViewScreenMat3),[s,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/e.resolution,n=a*this.width,o=a*this.height,l=Math.PI*this.rotation/180;A(t,t,L(s,i)),A(t,t,L(n/2,o/2)),$e(t,t,-l),A(t,t,L(-n/2,-o/2)),Fe(t,t,L(n,o)),ne(this.transforms.displayViewScreenMat3,e.displayViewMat3,t)}getTextures({forProcessing:e=!1,useProcessedTexture:t=!1}={}){const s=t?this._processedTexture??this._rasterTexture:this._rasterTexture,i=[],a=[];return s?(this._transformGridTexture&&!this.projected&&(a.push(this._transformGridTexture),i.push("u_transformGrid")),t?(a.push(s),i.push("u_image"),this._colormapTexture&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a}):(a.push(s),i.push("u_image"),this._colormapTexture&&!e&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a})):{names:i,textures:a}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){if(!this.stage)return void this._disposeTextures();const t=this._isValidSource(this.source);t&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(t?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=Le(e,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:e}=this;e.length!==0&&(this.processedTexture=e.shift(),e.forEach(t=>t==null?void 0:t.dispose()),e.length=0)}_createOrDestroyRasterTexture(e){var n,o;const t=(n=this.source)==null?void 0:n.extractBands(this.bandIds);if(!this._isValidSource(t))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const s=!this._isBandIdsChanged(this.bandIds);if(this._rasterTexture){if(s)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=!!((o=e.capabilities.textureFloat)!=null&&o.textureFloatLinear);const i=this._getTextureSamplingMethod(this.interpolation),a=this.isRendereredSource;this._rasterTexture=ke(e,t,i,a),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdsChanged(e){const t=this._rasterTextureBandIds;return!(t==null&&e==null||t&&e&&t.join("")===e.join(""))}_isValidSource(e){var t;return e!=null&&((t=e.pixels)==null?void 0:t.length)>0}_getTextureSamplingMethod(e){const{type:t}=this.symbolizerParameters,s=t==="lut"||t==="hillshade"||t==="stretch"&&this.symbolizerParameters.bandCount===1;return!this._supportsBilinearTexture||s||e!=="bilinear"&&e!=="cubic"?"nearest":"bilinear"}_updateColormapTexture(e){const t=this._colormap,s=this.symbolizerParameters.colormap;return s?t?s.length!==t.length||s.some((i,a)=>i!==t[a])?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=Y(e,s),void(this._colormap=s)):void 0:(this._colormapTexture=Y(e,s),void(this._colormap=s)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}_disposeTextures(e=!1){!this._transformGridTexture||e&&!this.projected||(this._transformGridTexture.dispose(),this._transformGridTexture=null),!e&&this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null,this._colormap=null,this._colormapTextureInvalidated=!0),!e&&this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this._processedTexture&&(this._processedTexture.dispose(),this._processedTexture=null)}}function ut(r){return r.source!=null}function W(r){const e=[];return r&&(e.push("applyProjection"),r.spacing[0]===1&&e.push("lookupProjection")),e}function ce(r,e,t){var a;const s=!((a=t.capabilities.textureFloat)!=null&&a.textureFloatLinear),i=[];return r==="cubic"?i.push("bicubic"):r==="bilinear"&&(e?(i.push("bilinear"),i.push("nnedge")):s&&i.push("bilinear")),i}const ct={vsPath:"raster/common",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ht(r,e,t){const s=t?[]:W(e.transformGrid);return{defines:s,program:r.painter.materialManager.getProgram(ct,s)}}function mt(r,e,t,s,i=!1){const{names:a,textures:n}=t.getTextures({useProcessedTexture:i});I(r.context,e,a,n),v(e,s,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.displayViewScreenMat3);const{colormap:o,colormapOffset:l}=t.symbolizerParameters,u=j(o,l);v(e,s,u)}const dt={createProgram:ht,bindTextureAndUniforms:mt},pt={vsPath:"raster/common",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ft(r,e,t){const{colormap:s}=e.symbolizerParameters,i=[...t?[]:W(e.transformGrid),...ce(e.interpolation,!0,r.context)];return s!=null&&i.push("applyColormap"),{defines:i,program:r.painter.materialManager.getProgram(pt,i)}}function gt(r,e,t,s,i=!1){const{names:a,textures:n}=t.getTextures({useProcessedTexture:i});I(r.context,e,a,n),v(e,s,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.displayViewScreenMat3);const o=t.symbolizerParameters,{colormap:l,colormapOffset:u}=o;if(l!=null){const m=j(l,u);v(e,s,m)}const d=De(o);v(e,s,d)}const _t={createProgram:ft,bindTextureAndUniforms:gt},yt={vsPath:"raster/common",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function xt(r,e,t){const{colormap:s,bandCount:i}=e.symbolizerParameters,a=[...t?[]:W(e.transformGrid),...ce(e.interpolation,i===1,r.context)];return e.isRendereredSource&&!t?a.push("noop"):s!=null&&a.push("applyColormap"),{defines:a,program:r.painter.materialManager.getProgram(yt,a)}}function bt(r,e,t,s,i=!1){const{names:a,textures:n}=t.getTextures({useProcessedTexture:i});I(r.context,e,a,n),v(e,s,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.displayViewScreenMat3);const o=t.symbolizerParameters,{colormap:l,colormapOffset:u}=o;if(l!=null){const m=j(l,u);v(e,s,m)}const d=Ge(o);v(e,s,d)}const wt={createProgram:xt,bindTextureAndUniforms:bt},G=new Map;function vt(r){return G.get(r)}G.set("lut",dt),G.set("hillshade",_t),G.set("stretch",wt);const Tt=[1,1],Pt=[2,0,0,0,2,0,-1,-1,0];function b(r,e,t){const{context:s,rasterFunction:i,hasBranches:a}=r,{raster:n}=i.parameters,o=a?(n==null?void 0:n.id)??-1:0,l=t.functionTextures[o]??t.rasterTexture;I(s,e,["u_image"],[l])}function he(r,e,t){const{rasters:s}=r.rasterFunction.parameters;if(!s)return;if(s.length<2)return b(r,e,t);const i=s.filter(a=>a.name!=="Constant").map(a=>a.id!=null&&a.name!=="Identity"?t.functionTextures[a.id]:t.rasterTexture);if(I(r.context,e,["u_image","u_image1","u_image2"].slice(0,i.length),i),i.length!==s.length){if(s.length===2){const a=s.findIndex(l=>l.name==="Constant"),n=a===0?[0,1,0,1,0,0,0,0,0]:[1,0,0,0,1,0,0,0,0],{value:o}=s[a].parameters;e.setUniform1f("u_image1Const",o),e.setUniformMatrix3fv("u_imageSwap",n)}else if(s.length===3){const a=[];if(s.forEach((n,o)=>n.name==="Constant"&&a.push(o)),a.length===1){const{value:n}=s[a[0]].parameters;e.setUniform1f("u_image1Const",n);const o=a[0]===0?[0,1,0,0,0,1,1,0,0]:a[0]===1?[1,0,0,0,0,1,0,1,0]:[1,0,0,0,1,0,0,0,1];e.setUniformMatrix3fv("u_imageSwap",o)}else if(a.length===2){const{value:n}=s[a[0]].parameters;e.setUniform1f("u_image1Const",n);const{value:o}=s[a[1]].parameters;e.setUniform1f("u_image2Const",o);const l=s.findIndex(d=>d.name!=="Constant"),u=l===0?[1,0,0,0,1,0,0,0,1]:l===1?[0,1,0,1,0,0,0,0,1]:[0,0,1,1,0,0,0,1,0];e.setUniformMatrix3fv("u_imageSwap",u)}}}}function y(r){r.setUniform2fv("u_coordScale",Tt),r.setUniformMatrix3fv("u_dvsMat3",Pt)}const St={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/aspect",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Rt(r,e){return r.painter.materialManager.getProgram(St,[])}function It(r,e,t){b(r,e,t),y(e);const s=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",s);const i=t.getRasterCellSize();e.setUniform2fv("u_cellSize",i)}const Ut={createProgram:Rt,bindTextureAndUniforms:It},$t={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/bandarithmetic",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ft(r,e){const{painter:t,rasterFunction:s}=r,{indexType:i}=s.parameters;return t.materialManager.getProgram($t,[i])}function Ct(r,e,t){b(r,e,t),y(e);const{bandIndexMat3:s}=r.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s)}const zt={createProgram:Ft,bindTextureAndUniforms:Ct},Mt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/compositeband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Vt(r,e){const t=r.rasterFunction.parameters.rasters.filter(i=>i.name==="Constant"),s=[];return t.length&&(s.push("oneConstant"),t.length===2&&s.push("twoConstant")),r.painter.materialManager.getProgram(Mt,s)}function Bt(r,e,t){he(r,e,t),y(e)}const Lt={createProgram:Vt,bindTextureAndUniforms:Bt},kt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/contrast",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Dt(r,e){return r.painter.materialManager.getProgram(kt,[])}function Gt(r,e,t){b(r,e,t),y(e);const{contrastOffset:s,brightnessOffset:i}=r.rasterFunction.parameters;e.setUniform1f("u_contrastOffset",s),e.setUniform1f("u_brightnessOffset",i)}const Ot={createProgram:Dt,bindTextureAndUniforms:Gt},Et={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/convolution",attributes:new Map([["a_position",0],["a_texcoord",1]])};function At(r,e){const{painter:t,rasterFunction:s}=r,{kernelRows:i,kernelCols:a}=s.parameters,n=[{name:"rows",value:i},{name:"cols",value:a}];return t.materialManager.getProgram(Et,n)}function qt(r,e,t){b(r,e,t),y(e),e.setUniform2fv("u_srcImageSize",[t.width,t.height]);const{kernel:s,clampRange:i}=r.rasterFunction.parameters;e.setUniform1fv("u_kernel",s),e.setUniform2fv("u_clampRange",i)}const jt={createProgram:At,bindTextureAndUniforms:qt},Wt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/curvature",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Nt(r,e){const{painter:t,rasterFunction:s}=r,{curvatureType:i}=s.parameters,a=[i];return t.materialManager.getProgram(Wt,a)}function Qt(r,e,t){b(r,e,t),y(e);const s=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",s);const{zFactor:i}=r.rasterFunction.parameters,a=t.getRasterCellSize();e.setUniform1f("u_zlFactor",200*i/a[0]/a[1])}const Ht={createProgram:Nt,bindTextureAndUniforms:Qt},Jt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/extractband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Yt(r,e){return r.painter.materialManager.getProgram(Jt,[])}function Xt(r,e,t){b(r,e,t),y(e);const{bandIndexMat3:s}=r.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s)}const Kt={createProgram:Yt,bindTextureAndUniforms:Xt},Zt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/focalstatistics",attributes:new Map([["a_position",0],["a_texcoord",1]])};function er(r,e){const{painter:t,rasterFunction:s}=r,{kernelRows:i,kernelCols:a,fillNoDataOnly:n,statisticsType:o}=s.parameters,l=[{name:"rows",value:i},{name:"cols",value:a},o];return n&&l.push("fill"),t.materialManager.getProgram(Zt,l)}function tr(r,e,t){b(r,e,t),y(e),e.setUniform2fv("u_srcImageSize",[t.width,t.height]);const{clampRange:s}=r.rasterFunction.parameters;e.setUniform2fv("u_clampRange",s)}const rr={createProgram:er,bindTextureAndUniforms:tr},sr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/grayscale",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ir(r,e){return r.painter.materialManager.getProgram(sr,[])}function ar(r,e,t){b(r,e,t),y(e);const{weights:s}=r.rasterFunction.parameters;e.setUniform3fv("u_weights",s)}const nr={createProgram:ir,bindTextureAndUniforms:ar},or={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/local",attributes:new Map([["a_position",0],["a_texcoord",1]])};function lr(r){const{painter:e,rasterFunction:t}=r,{imageCount:s,operationName:i,rasters:a,isOutputRounded:n}=t.parameters,o=[i.toLowerCase()];s===2&&o.push("twoImages");const l=a.filter(u=>u.name==="Constant");return l.length&&(o.push("oneConstant"),l.length===2&&o.push("twoConstant")),n&&o.push("roundOutput"),e.materialManager.getProgram(or,o)}function ur(r,e,t){he(r,e,t),y(e);const{domainRange:s}=r.rasterFunction.parameters;e.setUniform2fv("u_domainRange",s)}const ie={createProgram:lr,bindTextureAndUniforms:ur},cr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/mask",attributes:new Map([["a_position",0],["a_texcoord",1]])};function hr(r,e){const{painter:t,rasterFunction:s}=r,i=s.parameters.bandCount>1?["multiBand"]:[];return t.materialManager.getProgram(cr,i)}function mr(r,e,t){b(r,e,t),y(e);const{includedRanges:s,noDataValues:i}=r.rasterFunction.parameters;e.setUniform1fv("u_includedRanges",s),e.setUniform1fv("u_noDataValues",i)}const dr={createProgram:hr,bindTextureAndUniforms:mr},pr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/ndvi",attributes:new Map([["a_position",0],["a_texcoord",1]])};function fr(r,e){const{painter:t,rasterFunction:s}=r,i=s.parameters.scaled?["scaled"]:[];return t.materialManager.getProgram(pr,i)}function gr(r,e,t){b(r,e,t),y(e);const{bandIndexMat3:s}=r.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s)}const _r={createProgram:fr,bindTextureAndUniforms:gr},yr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/remap",attributes:new Map([["a_position",0],["a_texcoord",1]])};function xr(r,e){return r.painter.materialManager.getProgram(yr,[])}function br(r,e,t){b(r,e,t),y(e);const{noDataRanges:s,rangeMaps:i,allowUnmatched:a,clampRange:n}=r.rasterFunction.parameters;e.setUniform1fv("u_noDataRanges",s),e.setUniform1fv("u_rangeMaps",i),e.setUniform1f("u_unmatchMask",a?1:0),e.setUniform2fv("u_clampRange",n)}const wr={createProgram:xr,bindTextureAndUniforms:br},vr={vsPath:"raster/common",fsPath:"raster/reproject",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Tr(r,e){var o;const{painter:t}=r,s=[],{interpolation:i,transformGrid:a}=e,n=(o=r.rasterFunction)==null?void 0:o.parameters;return i==="cubic"?s.push("bicubic"):i==="bilinear"&&(s.push("bilinear"),n!=null&&n.requireNNEdge&&s.push("nnedge")),a&&(s.push("applyProjection"),a.spacing[0]===1&&s.push("lookupProjection")),t.materialManager.getProgram(vr,s)}function Pr(r,e,t){const{names:s,textures:i}=t.getTextures({forProcessing:!0});I(r.context,e,s,i),e.setUniform1f("u_scale",1),e.setUniform2fv("u_offset",[0,0]),e.setUniform2fv("u_coordScale",[1,1]),e.setUniformMatrix3fv("u_dvsMat3",[2,0,0,0,2,0,-1,-1,0]),e.setUniform1i("u_flipY",0),e.setUniform1f("u_opacity",1);const{width:a,height:n,source:o,transformGrid:l}=t;e.setUniform2fv("u_srcImageSize",[o.width,o.height]),e.setUniform2fv("u_targetImageSize",[a,n]),e.setUniform2fv("u_transformSpacing",l?l.spacing:X),e.setUniform2fv("u_transformGridSize",l?l.size:X)}const Sr={createProgram:Tr,bindTextureAndUniforms:Pr},Rr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/slope",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ir(r,e){const{painter:t,rasterFunction:s}=r,{slopeType:i}=s.parameters,a=i==="percent-rise"?["percentRise"]:[];return t.materialManager.getProgram(Rr,a)}function Ur(r,e,t){b(r,e,t),y(e);const s=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",s);const i=t.getRasterCellSize();e.setUniform2fv("u_cellSize",i);const{zFactor:a,slopeType:n,pixelSizePower:o,pixelSizeFactor:l}=r.rasterFunction.parameters;e.setUniform1f("u_zFactor",a),e.setUniform1f("u_pixelSizePower",n==="adjusted"?o:0),e.setUniform1f("u_pixelSizeFactor",n==="adjusted"?l:0)}const $r={createProgram:Ir,bindTextureAndUniforms:Ur},Fr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Cr(r,e){const{useGamma:t,bandCount:s,isOutputRounded:i}=r.rasterFunction.parameters,a=[];return t&&a.push("useGamma"),s>1&&a.push("multiBand"),i&&a.push("roundOutput"),r.painter.materialManager.getProgram(Fr,a)}function zr(r,e,t){b(r,e,t),y(e);const{width:s,height:i}=t,a=r.rasterFunction.parameters;e.setUniform2fv("u_srcImageSize",[s,i]),e.setUniform1f("u_minOutput",a.outMin),e.setUniform1f("u_maxOutput",a.outMax),e.setUniform1fv("u_factor",a.factor),e.setUniform1fv("u_minCutOff",a.minCutOff),e.setUniform1fv("u_maxCutOff",a.maxCutOff),e.setUniform1fv("u_gamma",a.gamma),e.setUniform1fv("u_gammaCorrection",a.gammaCorrection)}const Mr={createProgram:Cr,bindTextureAndUniforms:zr},_=new Map;function me(r,e){const t=new qe;return t.width=r,t.height=e,t.internalFormat=Me.RGBA32F,t.samplingMode=q.NEAREST,t.dataType=Ve.FLOAT,t.isImmutable=!0,t.wrapMode=Be.CLAMP_TO_EDGE,t}function Vr(r,e,t,s){const{context:i,requestRender:a,allowDelayedRender:n}=r,o=s.createProgram(r,t);return n&&a!=null&&!o.compiled?(a(),null):(i.bindFramebuffer(e),i.setViewport(0,0,e.width,e.height),i.useProgram(o),o)}function Br(r){return _.get(r.toLowerCase())}function Lr(r,e,t,s){const i=r.rasterFunction.name.toLowerCase(),a=i==="reproject"?Sr:Br(i);if(a==null)return;const n=Vr(r,t,s,a);if(!n)return;a.bindTextureAndUniforms(r,n,s);const{interpolation:o}=s;i==="reproject"&&(s.interpolation="nearest"),e.draw();const[l,u]=s.getRasterTextureSize(i==="reproject"),d=me(l,u),m=new je(r.context,d);if(t.copyToTexture(0,0,l,u,0,0,m),i==="reproject")s.rasterTexture=m,s.projected=!0,s.interpolation=o;else{const c=r.hasBranches?r.rasterFunction.id:0;s.functionTextures[c]=m}}_.set("arithmetic",ie),_.set("aspect",Ut),_.set("bandarithmetic",zt),_.set("compositeband",Lt),_.set("convolution",jt),_.set("contrastbrightness",Ot),_.set("curvature",Ht),_.set("extractband",Kt),_.set("statistics",rr),_.set("grayscale",nr),_.set("local",ie),_.set("mask",dr),_.set("ndvi",_r),_.set("remap",wr),_.set("slope",$r),_.set("stretch",Mr);class kr extends We{constructor(){super(...arguments),this.name="raster",this._quad=null,this._rendererUniformInfos=new Map,this._fbo=null}dispose(){U(this._quad),U(this._fbo)}prepareState(e){const{context:t,renderPass:s}=e,i=s==="raster";t.setBlendingEnabled(!i),t.setBlendFunctionSeparate(k.ONE,k.ONE_MINUS_SRC_ALPHA,k.ONE,k.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!i)}draw(e,t){if(!ut(t)||t.suspended)return;const{renderPass:s}=e;if(s!=="raster-bitmap")return s==="raster"?this._process(e,t):void this._drawBitmap(e,t,!0);this._drawBitmap(e,t)}_process(e,t){const{rasterFunction:s}=e,i=s.name==="Reproject";if(!(i?!(t.rasterTexture&&t.projected):!t.processed))return;const{timeline:a,context:n}=e;a.begin(this.name);const o=n.getBoundFramebufferObject(),l=n.getViewport();i||(t.processedTexture=U(t.processedTexture)),n.setStencilFunction(J.EQUAL,t.stencilRef,255),t.updateTexture(e),this._initQuad(n);const[u,d]=t.getRasterTextureSize(i),{isStandardRasterTileSize:m,fbo:c}=this._getRasterFBO(n,u,d);Lr(e,this._quad,c,t),m||c.dispose(),n.bindFramebuffer(o),n.setViewport(l.x,l.y,l.width,l.height),a.end(this.name)}_drawBitmap(e,t,s=!1){const{timeline:i,context:a}=e;if(i.begin(this.name),a.setStencilFunction(J.EQUAL,t.stencilRef,255),t.updateTexture(e),s&&!t.processedTexture){if(t.updateProcessedTexture(),!t.processedTexture)return void i.end(this.name);t.processed=!0}this._initBitmapCommonUniforms(t);const n=t.symbolizerParameters.type,o=vt(n),{requestRender:l,allowDelayedRender:u}=e,{defines:d,program:m}=o.createProgram(e,t,t.projected&&s);if(u&&l!=null&&!m.compiled)return void l();a.useProgram(m);const c=this._getUniformInfos(n,a,m,d);this._quad||(this._quad=new K(a,[0,0,1,0,0,1,1,1])),o.bindTextureAndUniforms(e,m,t,c,s),this._quad.draw(),i.end(this.name)}_initBitmapCommonUniforms(e){if(!e.commonUniforms){const t=Ae(1,[0,0]),{transformGrid:s,width:i,height:a}=e,n=Oe(s,[i,a],[e.source.width,e.source.height],1,!1);e.commonUniforms={...t,...n,u_coordScale:e.coordScale}}}_getRasterFBO(e,t,s){const i=t===C&&s===C;return i?(this._fbo||(this._fbo=this._createNewFBO(e,t,s)),{isStandardRasterTileSize:i,fbo:this._fbo}):{isStandardRasterTileSize:i,fbo:this._createNewFBO(e,t,s)}}_createNewFBO(e,t,s){const i=me(t,s);return new Ne(e,i)}_initQuad(e){this._quad||(this._quad=new K(e,[0,0,1,0,0,1,1,1]))}_getUniformInfos(e,t,s,i){const a=i.length>0?e+"-"+i.join("-"):e;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const n=Ee(t,s);return this._rendererUniformInfos.set(a,n),n}}class Dr extends le{constructor(e,t,s,i,a,n,o=null){super(e,t,s,i,a,n),this.bitmap=null,this.bitmap=new lt(o,null,null),this.bitmap.coordScale=[a,n],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e){super.setTransform(e),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}_createTransforms(){return{displayViewScreenMat3:z(),tileMat3:z()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}let Gr=class extends ue{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const t=this._getTileBounds(e),[s,i]=this._tileInfoView.tileInfo.size,a=this._tileInfoView.getTileResolution(e.level);return new Dr(e,a,t[0],t[3],s,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (tile)",brushes:[kr],target:()=>this.children.map(s=>s.bitmap),drawPhase:O.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){if(!this.visible||e.drawPhase!==O.MAP)return;const{rasterFunctionChain:t}=this;if(!t)return e.renderPass="raster-bitmap",void super.doRender(e);if(!t.hasFocalFunction){const[s,i]=this._tileInfoView.tileInfo.size;e.renderPass="raster",e.rasterFunction={name:"Reproject",parameters:{targetImageSize:[s,i],requireNNEdge:t.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1},super.doRender(e)}if(t!=null&&t.functions.length){const{functions:s,hasBranches:i}=t;for(let a=0;a<s.length;a++){const n=s[a];n.name!=="Constant"&&n.name!=="Identity"&&(e.renderPass="raster",e.rasterFunction=n,e.hasBranches=i,super.doRender(e))}}e.rasterFunction=null,e.renderPass="bitmap",super.doRender(e)}_getTileBounds(e){const t=this._tileInfoView.getTileBounds(ae(),e);if(this.isCustomTilingScheme&&e.world){const{tileInfo:s}=this._tileInfoView,i=Ie(s.spatialReference);if(i){const a=s.lodAt(e.level);if(!a)return t;const{resolution:n}=a,o=i/n%s.size[0],l=o?(s.size[0]-o)*n:0;t[0]-=l*e.world,t[2]-=l*e.world}}return t}};const Or=[0,0];let x=class extends pe{constructor(){super(...arguments),this._updatingHandles=new Qe,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=fe(async(r={})=>{const e=this._rasterFunctionState;if(r.reprocess&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const t=this._rasterFunctionState,{type:s}=this;return r.refetch||s!=="raster"&&r.reprocess||t==="cpu"||e==="cpu"?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(r.signal))})}destroy(){this._updatingHandles.destroy()}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(r){this._set("useWebGLForProcessing",r)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(r){if(this._tileStrategy&&this.useProgressiveUpdate!==r){this._tileStrategy.destroy(),this.container.removeAllChildren();const e=this._getCacheSize(r);this._tileStrategy=new se({cachePolicy:"purge",acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),cacheSize:e,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",r),this.layerView.requestUpdate()}}update(r){var a;this._fetchQueue.pause(),this._fetchQueue.state=r.state,this._tileStrategy.update(r),this._fetchQueue.resume();const{extent:e,resolution:t,scale:s}=r.state,i=this._tileInfoView.getClosestInfoForScale(s);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const n=this._srcResolutions[i.level],o=e.toJSON?e:ge.fromJSON(e);ee(this._blockCacheRegistryUrl,this._blockCacheRegistryId,o,t,n,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,((a=this.previousLOD)==null?void 0:a.level)!==i.level&&(this.previousLOD=i,this._symbolizerParams==null||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const r=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(r),this.layerView.requestUpdate()}get updating(){var r;return this._globalUpdateRequested||((r=this._updatingHandles)==null?void 0:r.updating)}attach(){const r=st();this._maxIndexedColormapSize=4*(r.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new tt(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new rt({tileInfoView:this._tileInfoView,concurrency:e,process:(s,i)=>this._fetchTile(s,i)});const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new se({cachePolicy:"purge",acquireTile:s=>this.acquireTile(s),releaseTile:s=>this.releaseTile(s),cacheSize:t,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,te(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(r){const e=this.container.createTile(r);return this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,e}releaseTile(r){this._fetchQueue.abort(r.key.id),this.container.removeChild(r),r.once("detach",()=>{r.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(r=null){const e=r==null||r.join(",")===this._tileInfoView.tileInfo.size.join(",");if(e&&this._emptyTilePixelBlock!=null)return this._emptyTilePixelBlock;r=r||this._tileInfoView.tileInfo.size;const[t,s]=r,i=new He({width:t,height:s,pixels:[new Uint8Array(t*s)],mask:new Uint8Array(t*s),pixelType:"u8"});return e&&(this._emptyTilePixelBlock=i),i}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:r,raster:e}=this.layer,t="rasterFunction"in e?e.rasterFunction.rawInputBandIds:null;return r!=null&&r.length&&(t!=null&&t.length)&&e.rasterInfo.bandCount!==1?r.map(s=>t[Math.min(s,t.length-1)]):r||t}updateRasterFunctionParameters(){}_fetchTile(r,e){const t=e!=null?e.signal:null,s=this.canUseWebGLForProcessing(),{layerView:i}=this,{tileInfo:a}=i,n=!a.isWrappable&&Ke(i.view.spatialReference)!=null,o=s&&this.layer.raster.hasUniqueSourceStorageInfo,l={allowPartialFill:!0,datumTransformation:i.datumTransformation,interpolation:s?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:o,skipRasterFunction:this.type==="raster"&&this.container.rasterFunctionChain!=null,signal:t,srcResolution:this._srcResolutions[r.level],timeExtent:i.timeExtent,tileInfo:a,disableWrapAround:n};return this.fetchTile(r,l)}_getCacheSize(r){return r?40:0}_initializeTileInfo(){const{layerView:r}=this,e=r.view.spatialReference;if(this._canUseLayerLODs()){const{origin:u,lods:d}=this.layer.tileInfo,m=d.map(({scale:f})=>f),c=Z.create({spatialReference:e,size:C,scales:m,origin:u});return r.set("tileInfo",c),void(this._srcResolutions=d.map(({resolution:f})=>({x:f,y:f})))}const{scales:t,srcResolutions:s,isCustomTilingScheme:i}=Ze(this.layer.serviceRasterInfo,e,{tileSize:C,alignGlobalDatasetWithAGOL:!0,limitToSrcResolution:!1}),a=Z.create({spatialReference:e,size:C,scales:t}),n=a.origin.x===0,{xmin:o,ymax:l}=r.fullExtent;(n||i&&a.origin.x>o)&&(a.origin=new _e({x:o,y:l,spatialReference:e})),this._isCustomTilingScheme=i,r.set("tileInfo",a),this._srcResolutions=s??[]}_canUseLayerLODs(){var i;const{layer:r,layerView:e}=this;if(r.raster.tileType!=="Map")return!1;const{lods:t}=r.tileInfo,s=(i=e.view.constraints)==null?void 0:i.effectiveLODs;return(s==null?void 0:s.length)===t.length&&s.every(({scale:a},n)=>Math.abs(a-t[n].scale)<.001)}_computeFetchConcurrency(){const{blockBoundary:r}=this.layer.serviceRasterInfo.storageInfo,e=r[r.length-1];return(e.maxCol-e.minCol+1)*(e.maxRow-e.minRow+1)>64?2:10}async _enqueueTileFetch(r,e){var t;if(!this._fetchQueue.has(r.key.id)){try{const s=await this._fetchQueue.push(r.key),i=this._getBandIds();let a=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){a=!1;try{await this._redrawImage((t=this._abortController)==null?void 0:t.signal)}catch(l){$(l)&&F.getLogger(this).error(l)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&this.type!=="rasterVF"||this.layerView.hasTilingEffects||this._symbolizerParams!=null||this._updateSymbolizerParams();const n=this._tileInfoView.getTileCoords(Or,r.key),o=this._tileInfoView.getTileResolution(r.key);await this.updateTileSource(r,{source:s,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:a,bandIds:i,coords:n,resolution:o}),r.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(r)}catch(s){$(s)||F.getLogger(this).error(s)}this.layerView.requestUpdate()}}async _redrawImage(r){if(this.container.children.length===0)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(r):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const e=this.container.children.map(async t=>this.updateTileSymbolizerParameters(t,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await Promise.allSettled(e),this.container.requestRender()}async _updateGlobalSymbolizerParams(r){const e={srcResolution:this._srcResolutions[this.previousLOD.level],registryId:this._blockCacheRegistryId,signal:r},t=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,e);if(!(t!=null&&t.pixelBlock))return;const{resolution:s}=this.previousLOD,i=this._getBandIds(),a=this.layer.symbolizer.generateWebGLParameters({pixelBlock:t.pixelBlock.extractBands(i),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:s,y:s},bandIds:i});!this.canUseWebGLForProcessing()&&a&&a.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(a.factor=a.factor.map(n=>255*n),a.outMin=Math.round(255*a.outMin),a.outMax=Math.round(255*a.outMax)),this._globalSymbolizerParams=a}_updateSymbolizerParams(){const{resolution:r}=this.previousLOD,e=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:r,y:r},bandIds:e})}_updateBlockCacheRegistry(r=!1){const{layer:e,layerView:t}=this,{raster:s}=e,{multidimensionalDefinition:i}=e.normalizeRasterFetchOptions({multidimensionalDefinition:e.multidimensionalDefinition,timeExtent:t.timeExtent}),a=s.rasterInfo.multidimensionalInfo?s.getSliceIndex(i):null,n=Ye(s.rasterId,a);if(n!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&te(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=Xe(n,s.rasterInfo),r){const{view:o}=t,l=this._tileInfoView.getClosestInfoForScale(o.scale),u=this._srcResolutions[l.level];ee(n,this._blockCacheRegistryId,o.extent,o.resolution,u,s.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const r=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh(e=>r.push(this._enqueueTileFetch(e))),await this._updatingHandles.addPromise(Promise.allSettled(r))}};h([p()],x.prototype,"_globalUpdateRequested",void 0),h([p()],x.prototype,"attached",void 0),h([p()],x.prototype,"container",void 0),h([p()],x.prototype,"layer",void 0),h([p()],x.prototype,"layerView",void 0),h([p()],x.prototype,"type",void 0),h([p()],x.prototype,"useWebGLForProcessing",null),h([p()],x.prototype,"useProgressiveUpdate",null),h([p()],x.prototype,"timeExtent",void 0),h([p()],x.prototype,"updating",null),x=h([M("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],x);let S=class extends x{constructor(){super(...arguments),this.type="raster"}attach(){super.attach(),this.container=new Gr(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){var i,a;const{symbolizer:e}=this.layer,t=(a=(i=e.lookup)==null?void 0:i.colormapLut)==null?void 0:a.indexedColormap,s=t&&t.length>this._maxIndexedColormapSize;return this.useWebGLForProcessing&&e.canRenderInWebGL&&!s&&!(this.layer.interpolation==="majority"&&oe(this.layer))}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}updateRasterFunctionParameters(){const{clips:e,view:t}=this.layerView;this._geometry!=null&&e.remove(this._geometry);const{raster:s,type:i}=this.layer;if(s.datasetFormat==="Function"){const w=s.getClippingGeometry(t.spatialReference);if(w){const g=new Pe({geometry:w});e.add(g),this._geometry=g}}const{container:a}=this;if(s.datasetFormat!=="Function"||i==="wcs")return a.rasterFunctionChain=null,a.children.forEach(w=>{const{bitmap:g}=w;g&&(g.suspended=!0,g.processed=!1,g.projected&&(g.invalidateTexture(),g.rasterTexture=null))}),void(this._rasterFunctionState="na");const n=this._rasterFunctionState,{rasterFunction:o,primaryRasters:l}=s,u=o.supportsGPU&&(!l||l.rasters.length<=1),d=u?o.flatWebGLFunctionChain:null,{renderer:m}=this.layer,c=!u||!(d!=null&&d.functions.length)||(m==null?void 0:m.type)==="raster-stretch"&&m.dynamicRangeAdjustment||!this.canUseWebGLForProcessing();a.rasterFunctionChain=c?null:d;const f=o==null?"na":a.rasterFunctionChain?"gpu":"cpu";a.children.forEach(w=>{const{bitmap:g}=w;g&&(g.suspended=n!==f,g.processed=!1,g.processedTexture=null)}),this._rasterFunctionState=f}async updateTileSource(e,t){const s=this._getBandIds(),i=this._getLayerInterpolation(),a=this.canUseWebGLForProcessing(),{source:n,globalSymbolizerParams:o,suspended:l,coords:u,resolution:d}=t,m=this.layerView.hasTilingEffects?o:t.symbolizerParams,{bitmap:c}=e;if([c.x,c.y]=u,c.resolution=d,(n==null?void 0:n.pixelBlock)!=null){const f={extent:n.extent,pixelBlock:n.pixelBlock,srcPixelSize:n.srcTilePixelSize};if(c.rawPixelData=f,a)c.source=n.pixelBlock,c.isRendereredSource=!1;else{const w=await this.layer.applyRenderer(f,(o==null?void 0:o.type)==="stretch"?o:void 0);c.source=w,c.isRendereredSource=!0}c.symbolizerParameters=a?m:null,c.transformGrid=a?n.transformGrid:null}else{const f=this.createEmptyTilePixelBlock();c.source=f,c.symbolizerParameters=a?m:null,c.transformGrid=null}c.bandIds=a?s:null,c.width=this._tileInfoView.tileInfo.size[0],c.height=this._tileInfoView.tileInfo.size[1],c.interpolation=i,c.suspended=l,c.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:s,global:i}=t,a=this._getBandIds(),n=this._getLayerInterpolation(),o=this.canUseWebGLForProcessing(),{bitmap:l}=e,{rawPixelData:u}=l;o||u==null?(l.isRendereredSource&&u!=null&&(l.source=u.pixelBlock),l.isRendereredSource=!1):(l.source=await this.layer.applyRenderer(u,(i==null?void 0:i.type)==="stretch"?i:void 0),l.isRendereredSource=!0),l.symbolizerParameters=o?this.layerView.hasTilingEffects?i:s:null,l.bandIds=o?a:null,l.interpolation=n,l.suspended=!1}_getLayerInterpolation(){const{interpolation:e,renderer:t}=this.layer;if(!t)return e;const s=t.type;return s==="raster-colormap"||s==="unique-value"||s==="class-breaks"?"nearest":t.type==="raster-stretch"&&t.colorRamp!=null?e==="bilinear"||e==="cubic"?"bilinear":"nearest":e}};h([p()],S.prototype,"container",void 0),h([p()],S.prototype,"layer",void 0),h([p()],S.prototype,"type",void 0),S=h([M("esri.views.2d.layers.imagery.ImageryTileView2D")],S);const Er=S;class Ar extends le{constructor(e,t,s,i,a,n,o=null){super(e,t,s,i,a,n),this.tileData=new we(o),this.tileData.coordScale=[a,n],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{displayViewScreenMat3:z(),tileMat3:z()}}setTransform(e){super.setTransform(e);const t=this.resolution/(e.resolution*e.pixelRatio),s=this.transforms.tileMat3,[i,a]=this.tileData.offset,n=[this.x+i*this.resolution,this.y-a*this.resolution],[o,l]=e.toScreenNoRotation([0,0],n),{symbolTileSize:u}=this.tileData.symbolizerParameters,d=Math.round((this.width-this.tileData.offset[0])/u)*u,m=Math.round((this.height-this.tileData.offset[1])/u)*u,c=d/this.rangeX*t,f=m/this.rangeY*t;Ce(s,c,0,0,0,f,0,o,l,1),ne(this.transforms.displayViewScreenMat3,e.displayViewMat3,s),this.tileData.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class qr extends ue{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const t=this._tileInfoView.getTileBounds(ae(),e),[s,i]=this._tileInfoView.tileInfo.size,a=this._tileInfoView.getTileResolution(e.level);return new Ar(e,a,t[0],t[3],s,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (vf tile)",brushes:[ve],target:()=>this.children.map(s=>s.tileData),drawPhase:O.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===O.MAP&&this.symbolTypes.forEach(t=>{e.renderPass=t,super.doRender(e)})}}let R=class extends x{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(r,e){e={...e,interpolation:"nearest",requestProjectedLocalDirections:!0};const t=await this.layer.fetchTile(r.level,r.row,r.col,e);return this.layer.serviceRasterInfo.dataType==="vector-magdir"&&(t!=null&&t.pixelBlock)&&(t.pixelBlock=await this.layer.convertVectorFieldData(t.pixelBlock,e)),t}updateTileSource(r,e){const t=e.symbolizerParams,{tileData:s}=r;s.key=r.key,s.width=this._tileInfoView.tileInfo.size[0],s.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:i}=t,{source:a}=e;if(s.offset=this._getTileSymbolOffset(s.key,i),(a==null?void 0:a.pixelBlock)!=null){const n={extent:a.extent,pixelBlock:a.pixelBlock};s.rawPixelData=n,s.symbolizerParameters=t,s.source=this._sampleVectorFieldData(a.pixelBlock,t,s.offset)}else{const n=[Math.round((this._tileInfoView.tileInfo.size[0]-s.offset[0])/i),Math.round((this._tileInfoView.tileInfo.size[1]-s.offset[1])/i)],o=this.createEmptyTilePixelBlock(n);s.source=o,s.symbolizerParameters=t}return s.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(r,e){var o;const t=e.local,{symbolTileSize:s}=t,{tileData:i}=r;i.offset=this._getTileSymbolOffset(i.key,s);const a=i.symbolizerParameters.symbolTileSize;i.symbolizerParameters=t;const n=(o=i.rawPixelData)==null?void 0:o.pixelBlock;return n!=null&&a!==s&&(i.source=this._sampleVectorFieldData(n,i.symbolizerParameters,i.offset)),Promise.resolve()}attach(){super.attach(),this.container=new qr(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=D(()=>this.layer.renderer,r=>this._updateSymbolType(r))}detach(){var r;super.detach(),this.container.removeAllChildren(),(r=this._handle)==null||r.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(r,e){const t=r.col*this._tileInfoView.tileInfo.size[0]%e,s=r.row*this._tileInfoView.tileInfo.size[1]%e;return[t>e/2?e-t:-t,s>e/2?e-s:-s]}_sampleVectorFieldData(r,e,t){const{symbolTileSize:s}=e;return Je(r,"vector-uv",s,t)}_updateSymbolType(r){r.type==="vector-field"&&(this.container.symbolTypes=r.style==="wind-barb"?["scalar","triangle"]:r.style==="simple-scalar"?["scalar"]:["triangle"])}};h([p()],R.prototype,"container",void 0),h([p()],R.prototype,"layer",void 0),h([p()],R.prototype,"type",void 0),R=h([M("esri.views.2d.layers.imagery.VectorFieldTileView2D")],R);const jr=R,Wr=r=>{let e=class extends r{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return re(this.layer.serviceRasterInfo,this.view.spatialReference)}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){return et(this.layer.fullExtent,this.view.spatialReference,!0)}supportsSpatialReference(t){return!!re(this.layer.serviceRasterInfo,t)}async fetchPopupFeaturesAtLocation(t,s){const{layer:i}=this;if(!t)throw new Q("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:i});const{popupEnabled:a}=i,n=at(i,s);if(!a||n==null)throw new Q("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:a,popupTemplate:n});const o=[],{value:l,magdirValue:u,processedValue:d}=await i.identify(t,{timeExtent:this.timeExtent,signal:s==null?void 0:s.signal});let m="";if(l&&l.length){m=i.type==="imagery-tile"&&i.hasStandardTime()&&l[0]!=null?l.map(E=>i.getStandardTimeValue(E)).join(", "):l.join(", ");const c={ObjectId:0},f="Raster.ServicePixelValue";c[f]=i.type==="imagery-tile"&&i.raster.datasetFormat==="Function"?d==null?void 0:d.join(", "):m,c[f+".Raw"]=m;const w=i.serviceRasterInfo.attributeTable;if(w!=null){const{fields:E,features:de}=w,N=E.find(({name:T})=>T.toLowerCase()==="value"),B=N?de.find(T=>String(T.attributes[N.name])===m):null;if(B)for(const T in B.attributes)B.attributes.hasOwnProperty(T)&&(c[this._rasterFieldPrefix+T]=B.attributes[T])}const g=i.serviceRasterInfo.dataType;g!=="vector-magdir"&&g!=="vector-uv"||(c["Raster.Magnitude"]=u==null?void 0:u[0],c["Raster.Direction"]=u==null?void 0:u[1]);const V=new ye(this.fullExtent.clone(),null,c);V.layer=i,V.sourceLayer=V.layer,o.push(V)}return o}};return h([p()],e.prototype,"layer",void 0),h([p(it)],e.prototype,"timeExtent",void 0),h([p()],e.prototype,"view",void 0),h([p()],e.prototype,"fullExtent",null),h([p()],e.prototype,"tileInfo",void 0),h([p({readOnly:!0})],e.prototype,"hasTilingEffects",null),h([p()],e.prototype,"datumTransformation",null),e=h([M("esri.views.layers.ImageryTileLayerView")],e),e};let P=class extends Wr(nt(Se(Re))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(r){this._useWebGLForProcessing=r,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=r)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(r){this._useProgressiveUpdate=r,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=r)}get displayParameters(){const{layer:r}=this,e=this._get("displayParameters");return r.renderer?{bandIds:r.bandIds,renderer:r.renderer,interpolation:r.interpolation,multidimensionalDefinition:r.multidimensionalDefinition,rasterFunction:r.type==="imagery-tile"?r.rasterFunction:null}:e}update(r){var e;(e=this.subview)==null||e.update(r),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([D(()=>this.displayParameters,(r,e)=>{const t=r.interpolation!==(e==null?void 0:e.interpolation)&&(r.interpolation==="majority"||(e==null?void 0:e.interpolation)==="majority")&&oe(this.layer),s=r.renderer!==(e==null?void 0:e.renderer)&&this._getSubviewType(e==null?void 0:e.renderer)!==this._getSubviewType(r.renderer);s&&this._updateSubview();const i=r.multidimensionalDefinition!==(e==null?void 0:e.multidimensionalDefinition),a=r.rasterFunction!==(e==null?void 0:e.rasterFunction),n=a&&!this._useWebGLForProcessing,o=i||t||s||n;this.subview.redrawOrRefetch({refetch:o,reprocess:a}).catch(l=>{$(l)||F.getLogger(this).error(l)}),this.notifyChange("updating")}),D(()=>this.layer.multidimensionalSubset??null,(r,e)=>{const{multidimensionalDefinition:t}=this.layer;t!=null&&H(t,r)!==H(t,e)&&(this.subview.redrawOrRefetch({refetch:!0}).catch(s=>{$(s)||F.getLogger(this).error(s)}),this.notifyChange("updating"))},xe),D(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch(r=>{$(r)||F.getLogger(this).error(r)})},be)])}detach(){var r;this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),(r=this.subview)==null||r.destroy(),this.subview=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){var i;const{renderer:r}=this.layer;if(!r)return;const e=this._getSubviewType(r);if(this.subview){if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),(i=this.subview)==null||i.destroy(),this.subview=null}const{layer:t}=this;let s;if(s=e==="rasterVF"?new jr({layer:t,layerView:this}):e==="flow"?new Te({layer:t,layerView:this}):new Er({layer:t,layerView:this}),"useWebGLForProcessing"in s&&(s.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in s&&(s.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in s){const{subview:a}=this;s.previousLOD=a&&"previousLOD"in a?a.previousLOD:null}this._attachSubview(s),this.subview=s,this.requestUpdate()}_attachSubview(r){r&&!r.attached&&(r.attach(),r.attached=!0,this.container.addChildAt(r.container,0))}_detachSubview(r){r!=null&&r.attached&&(this.container.removeChild(r.container),r.detach(),r.attached=!1)}_getSubviewType(r){const e=r==null?void 0:r.type;return e==="vector-field"?"rasterVF":e==="flow"?"flow":"raster"}};h([p()],P.prototype,"subview",void 0),h([p()],P.prototype,"useWebGLForProcessing",null),h([p()],P.prototype,"useProgressiveUpdate",null),h([p({readOnly:!0})],P.prototype,"displayParameters",null),P=h([M("esri.views.2d.layers.ImageryTileLayerView2D")],P);const ha=P;export{ha as default};
