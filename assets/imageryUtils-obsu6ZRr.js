import{$ as y,j as n}from"./utils-BAdo22zH.js";import{l as p,b as c,f as i,i as u}from"./portalItemUtils-CCKlXC6h.js";import"./index-BdlI2FVT.js";import"./originUtils-D69mHv66.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./PortalItem-D_imZ4F9.js";import"./jsonContext-BnRI_b3Y.js";import"./saveAPIKeyUtils-CZD59sVZ.js";import"./saveUtils-BO0eIC9S.js";import"./projection-NmY8Pkrx.js";const s="Image Service",g="imagery-layer-save",v="imagery-layer-save-as",f="imagery-tile-layer-save",d="imagery-tile-layer-save-as";function m(r){var t;if(r.type==="imagery")return{isValid:!0};const{raster:e}=r,a=(e==null?void 0:e.datasetFormat)==="Function"?(t=e.primaryRasters)==null?void 0:t.rasters[0]:e;return{isValid:(a==null?void 0:a.datasetFormat)==="RasterTileServer"&&(a.tileType==="Raster"||a.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function o(r){const e=r.layerJSON;return Promise.resolve(e&&Object.keys(e).length?e:null)}async function T(r,e){const{parsedUrl:a,title:t,fullExtent:l}=r;e.url=a.path,e.title||(e.title=t);try{e.extent=await p(l)}catch{e.extent=void 0}c(e,i.METADATA),r.type==="imagery-tile"&&u(e,i.TILED_IMAGERY)}async function F(r,e){const a=r.type==="imagery"?g:f;return y({layer:r,itemType:s,validateLayer:m,createItemData:o,errorNamePrefix:a},e)}async function L(r,e,a){const t=r.type==="imagery"?v:d;return n({layer:r,itemType:s,validateLayer:m,createItemData:o,errorNamePrefix:t,newItem:e,setItemProperties:T},a)}export{F as save,L as saveAs};
