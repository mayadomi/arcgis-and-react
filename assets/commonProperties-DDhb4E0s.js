import{aE as J,fZ as _,eY as B,f_ as x,f as a,y as f,O as b,N as I,T as D,g as S,f$ as P,f7 as d,g0 as V,c8 as Z,L as H,a8 as U,fc as Y,fh as O,dk as K,b6 as k,ad as Q}from"./index-BdlI2FVT.js";const y=(e=>e)(["operational-layers","basemap","ground"]),A={milliseconds:1,seconds:1e3,minutes:6e4,hours:36e5,days:864e5,weeks:6048e5,months:26784e5,years:31536e6,decades:31536e7,centuries:31536e8};function w(e,t,n,r=x){const i=new J(_(r)),o=B.fromJSDate(e,{zone:i}),s=n==="decades"||n==="centuries"?"year":G(n);return n==="decades"&&(t*=10),n==="centuries"&&(t*=100),o.plus({[s]:t}).toJSDate()}function C(e,t,n=x){const r=new J(_(n)),i=B.fromJSDate(e,{zone:r});if(t==="decades"||t==="centuries"){const s=i.startOf("year"),{year:u}=s,p=u-u%(t==="decades"?10:100);return s.set({year:p}).toJSDate()}const o=G(t);return i.startOf(o).toJSDate()}function ie(e,t,n){return e===0?0:e*A[t]/A[n]}function G(e){switch(e){case"milliseconds":return"millisecond";case"seconds":return"second";case"minutes":return"minute";case"hours":return"hour";case"days":return"day";case"weeks":return"week";case"months":return"month";case"years":return"year"}}var m;let l=m=class extends D{static get allTime(){return q}static get empty(){return W}constructor(e){super(e),this.end=null,this.start=null}readEnd(e,t){return t.end!=null?new Date(t.end):null}writeEnd(e,t){t.end=(e==null?void 0:e.getTime())??null}get isAllTime(){return this.equals(m.allTime)}get isEmpty(){return this.equals(m.empty)}readStart(e,t){return t.start!=null?new Date(t.start):null}writeStart(e,t){t.start=(e==null?void 0:e.getTime())??null}clone(){return new m({end:this.end,start:this.start})}equals(e){var o,s,u,p;if(!e)return!1;const t=((o=this.start)==null?void 0:o.getTime())??this.start,n=((s=this.end)==null?void 0:s.getTime())??this.end,r=((u=e.start)==null?void 0:u.getTime())??e.start,i=((p=e.end)==null?void 0:p.getTime())??e.end;return t===r&&n===i}expandTo(e,t=x){if(this.isEmpty||this.isAllTime)return this.clone();let n=this.start;n&&(n=C(n,e,t));let r=this.end;if(r){const i=C(r,e,t);r=r.getTime()===i.getTime()?i:w(i,1,e,t)}return new m({start:n,end:r})}intersection(e){var u,p,h,g;if(!e)return this.clone();if(this.isEmpty||e.isEmpty)return m.empty;if(this.isAllTime)return e.clone();if(e.isAllTime)return this.clone();const t=((u=this.start)==null?void 0:u.getTime())??-1/0,n=((p=this.end)==null?void 0:p.getTime())??1/0,r=((h=e.start)==null?void 0:h.getTime())??-1/0,i=((g=e.end)==null?void 0:g.getTime())??1/0;let o,s;if(r>=t&&r<=n?o=r:t>=r&&t<=i&&(o=t),n>=r&&n<=i?s=n:i>=t&&i<=n&&(s=i),o!=null&&s!=null&&!isNaN(o)&&!isNaN(s)){const E=new m;return E.start=o===-1/0?null:new Date(o),E.end=s===1/0?null:new Date(s),E}return m.empty}offset(e,t,n=x){if(this.isEmpty||this.isAllTime)return this.clone();const r=new m,{start:i,end:o}=this;return i!=null&&(r.start=w(i,e,t,n)),o!=null&&(r.end=w(o,e,t,n)),r}union(e){if(!e||e.isEmpty)return this.clone();if(this.isEmpty)return e.clone();if(this.isAllTime||e.isAllTime)return q.clone();const t=this.start!=null&&e.start!=null?new Date(Math.min(this.start.getTime(),e.start.getTime())):null,n=this.end!=null&&e.end!=null?new Date(Math.max(this.end.getTime(),e.end.getTime())):null;return new m({start:t,end:n})}};a([f({type:Date,json:{write:{allowNull:!0}}})],l.prototype,"end",void 0),a([b("end")],l.prototype,"readEnd",null),a([I("end")],l.prototype,"writeEnd",null),a([f({readOnly:!0,json:{read:!1}})],l.prototype,"isAllTime",null),a([f({readOnly:!0,json:{read:!1}})],l.prototype,"isEmpty",null),a([f({type:Date,json:{write:{allowNull:!0}}})],l.prototype,"start",void 0),a([b("start")],l.prototype,"readStart",null),a([I("start")],l.prototype,"writeStart",null),l=m=a([S("esri.TimeExtent")],l);const q=new l,W=new l({start:void 0,end:void 0}),N=l;function X(e){if(!e)return e;const{start:t,end:n}=e;return new N({start:t!=null?w(t,-t.getTimezoneOffset(),"minutes"):t,end:n!=null?w(n,-n.getTimezoneOffset(),"minutes"):n})}function ee(e){if(!e)return e;const{start:t,end:n}=e;return new N({start:t!=null?w(t,t.getTimezoneOffset(),"minutes"):t,end:n!=null?w(n,n.getTimezoneOffset(),"minutes"):n})}var $;let T=$=class extends D{constructor(e){super(e)}async collectRequiredFields(e,t){return P(e,t,this.expression)}clone(){return new $({expression:this.expression,title:this.title})}equals(e){return this.expression===e.expression&&this.title===e.title}};a([f({type:String,json:{write:!0}})],T.prototype,"expression",void 0),a([f({type:String,json:{write:!0}})],T.prototype,"title",void 0),T=$=a([S("esri.layers.support.FeatureExpressionInfo")],T);const z=T,L={unknown:1,inches:d(1,"meters","inches"),feet:d(1,"meters","feet"),"us-feet":d(1,"meters","us-feet"),yards:d(1,"meters","yards"),miles:d(1,"meters","miles"),"nautical-miles":d(1,"meters","nautical-miles"),millimeters:d(1,"meters","millimeters"),centimeters:d(1,"meters","centimeters"),decimeters:d(1,"meters","decimeters"),meters:d(1,"meters","meters"),kilometers:d(1,"meters","kilometers"),"decimal-degrees":1/V(1,"meters",Z.radius)};function oe(e){return 1/(L[e]||1)}function te(){const e=Object.keys(L);return e.sort(),e}const ne=te();var j;const v=H()({onTheGround:"on-the-ground",relativeToGround:"relative-to-ground",relativeToScene:"relative-to-scene",absoluteHeight:"absolute-height"}),R=new U({foot:"feet",kilometer:"kilometers",meter:"meters",mile:"miles","us-foot":"us-feet",yard:"yards"});let c=j=class extends D{constructor(e){super(e),this.offset=null}readFeatureExpressionInfo(e,t){return e??(t.featureExpression&&t.featureExpression.value===0?{expression:"0"}:void 0)}writeFeatureExpressionInfo(e,t,n,r){t[n]=e.write({},r),e.expression==="0"&&(t.featureExpression={value:0})}get mode(){const{offset:e,featureExpressionInfo:t}=this;return this._isOverridden("mode")?this._get("mode"):e!=null||t?"relative-to-ground":"on-the-ground"}set mode(e){this._override("mode",e)}set unit(e){this._set("unit",e)}write(e,t){return this.offset||this.mode||this.featureExpressionInfo||this.unit?super.write(e,t):null}clone(){return new j({mode:this.mode,offset:this.offset,featureExpressionInfo:this.featureExpressionInfo?this.featureExpressionInfo.clone():void 0,unit:this.unit})}equals(e){return this.mode===e.mode&&this.offset===e.offset&&this.unit===e.unit&&Y(this.featureExpressionInfo,e.featureExpressionInfo)}};a([f({type:z,json:{write:!0}})],c.prototype,"featureExpressionInfo",void 0),a([b("featureExpressionInfo",["featureExpressionInfo","featureExpression"])],c.prototype,"readFeatureExpressionInfo",null),a([I("featureExpressionInfo",{featureExpressionInfo:{type:z},"featureExpression.value":{type:[0]}})],c.prototype,"writeFeatureExpressionInfo",null),a([f({type:v.apiValues,nonNullable:!0,json:{type:v.jsonValues,read:v.read,write:{writer:v.write,isRequired:!0}}})],c.prototype,"mode",null),a([f({type:Number,json:{write:!0}})],c.prototype,"offset",void 0),a([f({type:ne,json:{type:String,read:R.read,write:R.write}})],c.prototype,"unit",null),c=j=a([S("esri.layers.support.ElevationInfo")],c);const re=c,ae={type:Boolean,value:!0,json:{origins:{service:{read:!1,write:!1},"web-map":{read:!1,write:!1}},name:"screenSizePerspective",write:{enabled:!0,layerContainerTypes:y}}},le={type:Boolean,value:!0,json:{name:"disablePopup",read:{reader:(e,t)=>!t.disablePopup},write:{enabled:!0,writer(e,t,n){t[n]=!e}}}},ue={type:Boolean,value:!0,nonNullable:!0,json:{name:"showLabels",write:{enabled:!0,layerContainerTypes:y}}},de={type:String,json:{origins:{"portal-item":{write:!1}},write:{isRequired:!0,ignoreOrigin:!0,writer:K}}},me={type:Boolean,value:!0,nonNullable:!0,json:{origins:{service:{read:{enabled:!1}}},name:"showLegend",write:{enabled:!0,layerContainerTypes:y}}},pe={value:null,type:re,json:{origins:{service:{name:"elevationInfo",write:!0}},name:"layerDefinition.elevationInfo",write:{enabled:!0,layerContainerTypes:y}}};function fe(e){return{type:e,readOnly:!0,json:{origins:{service:{read:!0}},read:!1}}}const M={write:{enabled:!0,layerContainerTypes:y},read:!0},F={type:Number,json:{origins:{"web-document":M,"portal-item":{write:!0}}}},ce={...F,json:{...F.json,origins:{"web-document":{...M,write:{enabled:!0,layerContainerTypes:y,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}}}},read:{source:["layerDefinition.drawingInfo.transparency","drawingInfo.transparency"],reader:(e,t,n)=>{var r;return n&&n.origin!=="service"||!t.drawingInfo||t.drawingInfo.transparency===void 0?(r=t.layerDefinition)!=null&&r.drawingInfo&&t.layerDefinition.drawingInfo.transparency!==void 0?O(t.layerDefinition.drawingInfo.transparency):void 0:O(t.drawingInfo.transparency)}}}},ye={type:N,readOnly:!0,get(){var p,h,g;const e=((p=this.layer)==null?void 0:p.timeInfo)!=null?this.layer:((h=this.i3slayer)==null?void 0:h.timeInfo)!=null?this.i3slayer:null;if(e==null)return null;const{datesInUnknownTimezone:t,timeOffset:n,useViewTime:r}=e,i=(g=this.view)==null?void 0:g.timeExtent;let o=e.timeExtent;t&&(o=ee(o));let s=r?i&&o?i.intersection(o):i||o:o;if(!s||s.isEmpty||s.isAllTime)return s;n&&(s=s.offset(-n.value,n.unit)),t&&(s=X(s));const u=this._get("timeExtent");return s.equals(u)?u:s}},we={type:k,readOnly:!0,json:{origins:{service:{read:{source:["fullExtent","spatialReference"],reader:(e,t)=>{const n=k.fromJSON(e);return t.spatialReference!=null&&typeof t.spatialReference=="object"&&(n.spatialReference=Q.fromJSON(t.spatialReference)),n}}}},read:!1}},he={type:String,json:{origins:{service:{read:!1},"portal-item":{read:!1}}}},ge={type:Number,json:{origins:{service:{write:{enabled:!1}},"web-scene":{name:"layerDefinition.minScale",write:{enabled:!0,layerContainerTypes:y}}},name:"layerDefinition.minScale",write:!0}},Te={type:Number,json:{origins:{service:{write:{enabled:!1}},"web-scene":{name:"layerDefinition.maxScale",write:{enabled:!0,layerContainerTypes:y}}},name:"layerDefinition.maxScale",write:!0}},ve={json:{write:{ignoreOrigin:!0,layerContainerTypes:y},origins:{"web-map":{read:!1,write:!1}}}};export{ve as C,he as I,Te as S,ge as T,me as a,y as b,N as c,de as d,ce as e,pe as f,F as g,re as h,ie as i,ye as j,oe as k,L as l,ue as m,ae as p,A as r,we as v,fe as w,le as y};
