import{s as g,a0 as c,aA as T,b$ as E,b as y,X as _,d as R,G as P}from"./index-BdlI2FVT.js";import{o as q,r as I}from"./featureConversionUtils-DuXJe-nV.js";import{m as b}from"./FeatureStore-B8W1tHIO.js";import{x as $,j}from"./timeSupport-BoBnP7hk.js";import{$ as N}from"./QueryEngine-DtjoUZZM.js";import{E as O,N as Q}from"./geojson-DPgKVSSK.js";import{p as M}from"./sourceUtils-BHulFBDL.js";import{o as k,e as L,K as f}from"./wfsUtils-CUandBCL.js";import{Z as U}from"./FieldsIndex-BZm6eFTZ.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BoundsStore-Ca-uTxfM.js";import"./PooledRBush-BqAT_dad.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./projection-NmY8Pkrx.js";import"./normalizeUtils-Cik6ve5l.js";import"./normalizeUtilsCommon-Cpq7p5az.js";import"./utils-nisnNviQ.js";import"./json-Wa8cmqdu.js";import"./LRUCache-CZ2xYNgP.js";import"./WhereClause-DgCJjgOC.js";import"./TimeOnly-BmkK1Ctx.js";import"./UnknownTimeZone-BLIgHyqR.js";import"./fieldType-CHp3lv4g.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./heatmapUtils-Xd5ASPFI.js";import"./vec42-DpHkGCNS.js";import"./vec4f64-CCf6w8sj.js";import"./utils-DOnCa0Oz.js";import"./commonProperties-DDhb4E0s.js";import"./utils-fAKF9tVT.js";import"./Basemap-CgzecouK.js";import"./loadAll-d4sPuW9e.js";import"./PortalItem-D_imZ4F9.js";import"./writeUtils-BJozxT0a.js";import"./layerUtils-C0ByrsCg.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CSxAPr-6.js";import"./utils-DnvSpbGV.js";import"./ClassBreaksDefinition-CrXWJYKW.js";import"./signal-yOcmJBqC.js";import"./RenderState-DaVlEYWY.js";import"./date-M6n_RqpC.js";import"./xmlUtils-CtUoQO7q.js";import"./portalItemUtils-CCKlXC6h.js";import"./Field-CcwrtZjp.js";const x="esri.layers.WFSLayer";class Qt{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){const{getFeatureUrl:r,getFeatureOutputFormat:o,fields:i,geometryType:u,featureType:s,maxRecordCount:n,maxTotalRecordCount:h,maxPageCount:C,objectIdField:d,customParameters:F}=t,{spatialReference:p,getFeatureSpatialReference:l}=k(r,s,t.spatialReference);try{await $(l,p)}catch{throw new g("unsupported-projection","Projection not supported",{inSpatialReference:l,outSpatialReference:p})}c(e),this._customParameters=F,this._featureType=s,this._fieldsIndex=U.fromLayerJSON({fields:i,dateFieldsTimeReference:i.some(S=>S.type==="esriFieldTypeDate")?{timeZoneIANA:T}:null}),this._geometryType=u,this._getFeatureUrl=r,this._getFeatureOutputFormat=o,this._getFeatureSpatialReference=l,this._maxRecordCount=n,this._maxTotalRecordCount=h,this._maxPageCount=C,this._objectIdField=d,this._spatialReference=p;let m=await this._snapshotFeatures(e);if(m.errors.length>0&&(this._supportsPagination=!1,m=await this._snapshotFeatures(e),m.errors.length>0))throw m.errors[0];return this._queryEngine=new N({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,objectIdField:d,spatialReference:p,timeInfo:null,featureStore:new b({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(m.features),{warnings:w(m),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new g("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}async refresh(t){var e;return this._customParameters=t.customParameters,this._maxRecordCount=t.maxRecordCount,this._maxTotalRecordCount=t.maxTotalRecordCount,this._maxPageCount=t.maxPageCount,(e=this._snapshotTask)==null||e.abort(),this._snapshotTask=E(r=>this._snapshotFeatures({signal:r})),this._snapshotTask.promise.then(r=>{var o;this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(r.features);for(const i of w(r))y.getLogger(x).warn(new _("wfs-layer:refresh-warning",i.message,i.details));(o=r.errors)!=null&&o.length&&y.getLogger(x).warn(new _("wfs-layer:refresh-error","Refresh completed with errors",{errors:r.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t==null?void 0:t.signal,r=this._maxTotalRecordCount,o=this._maxPageCount,i=this._supportsPagination?await L(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let u=[];const s=[];if(i==null)try{u=await this._singleQuery(e)}catch(n){R(n)||s.push(n)}else{const n=Math.min(i,r),h=Z(this,Math.max(1,Math.min(Math.ceil(n/this._maxRecordCount),o)),e);await Promise.allSettled(Array.from({length:10}).map(()=>A(h,u,s)))}return c(e),{features:u,totalRecordCount:i,maxTotalRecordCount:r,maxPageCount:o,errors:s}}async _singleQuery(t){const e=await f(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:t});return this._processGeoJSON(e,{signal:t})}async _pageQuery(t,e){const r=t*this._maxRecordCount,o=await f(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:r,count:this._maxRecordCount,signal:e});return this._processGeoJSON(o,{startIndex:r,signal:e})}_processGeoJSON(t,e){O(t,this._getFeatureSpatialReference.wkid);const{startIndex:r,signal:o}=e;c(o);const i=Q(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!P(this._spatialReference,this._getFeatureSpatialReference))for(const s of i)s.geometry!=null&&(s.geometry=q(j(I(s.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=r??1;for(const s of i){const n={};M(this._fieldsIndex,n,s.attributes,!0),s.attributes=n,n[this._objectIdField]==null&&(s.objectId=n[this._objectIdField]=u++)}return i}}function*Z(a,t,e){for(let r=0;r<t;r++)yield a._pageQuery(r,e)}async function A(a,t,e){let r=a.next();for(;!r.done;){try{const o=await r.value;t.push(...o)}catch(o){R(o)||e.push(o)}r=a.next()}}function w(a){const t=[];return a.totalRecordCount!=null&&(a.features.length<a.totalRecordCount&&t.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${a.features.length} of ${a.totalRecordCount} in ${a.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:a.features.length,totalRecordCount:a.totalRecordCount}}),a.totalRecordCount>a.maxTotalRecordCount&&t.push({name:"wfs-layer:large-dataset",message:`The number of ${a.totalRecordCount} features exceeds the maximum allowed of ${a.maxTotalRecordCount}.`,details:{recordCount:a.features.length,totalRecordCount:a.totalRecordCount,maxTotalRecordCount:a.maxTotalRecordCount}})),t}export{Qt as default};
