import{x as d,eP as $,s as c,eQ as m,cy as C,eR as I,cA as x,cz as D,cB as L,eS as M,eT as U,cR as j,eU as k,eV as R,eW as v,aa as i,U as N,a4 as T,R as S,a1 as A,Q as q,eX as P}from"./index-BdlI2FVT.js";import{b as E}from"./layerUtils-C0ByrsCg.js";const u={retainId:!1,ignoreDrivers:!1,hasLabelingContext:!0};function Q(e,s=u){var l,f;if(!e)return{symbol:null};const{retainId:r=u.retainId,ignoreDrivers:n=u.ignoreDrivers,hasLabelingContext:o=u.hasLabelingContext,retainCIM:a=u.retainCIM}=s;let t=null;if(d(e)||e instanceof $)t=e.clone();else if(e.type==="cim"){const y=(f=(l=e.data)==null?void 0:l.symbol)==null?void 0:f.type;if(y!=="CIMPointSymbol")return{error:new c("symbol-conversion:unsupported-cim-symbol",`CIM symbol of type '${y||"unknown"}' is unsupported in 3D`,{symbol:e})};t=a?e.clone():m.fromCIMSymbol(e)}else if(e instanceof C)t=I.fromSimpleLineSymbol(e);else if(e instanceof x)t=m.fromSimpleMarkerSymbol(e);else if(e instanceof D)t=m.fromPictureMarkerSymbol(e);else if(e instanceof L)t=s.geometryType&&s.geometryType==="mesh"?M.fromSimpleFillSymbol(e):U.fromSimpleFillSymbol(e);else{if(!(e instanceof j))return{error:new c("symbol-conversion:unsupported-2d-symbol",`2D symbol of type '${e.type||e.declaredClass}' is unsupported in 3D`,{symbol:e})};t=o?k.fromTextSymbol(e):m.fromTextSymbol(e)}return r&&t&&t.type!=="cim"&&(t.id=e.id),n&&d(t)&&t.symbolLayers.forEach(y=>y.ignoreDrivers=!0),{symbol:t}}function Y(e,s,r,n){const o=g(e,{},{context:n,isLabelSymbol:!1});o!=null&&(s[r]=o)}function Z(e,s,r,n){const o=g(e,{},{context:n,isLabelSymbol:!0});o!=null&&(s[r]=o)}function p(e){return e instanceof v||e instanceof $}function g(e,s,r){if(e==null)return null;const{context:n,isLabelSymbol:o}=r,a=n==null?void 0:n.origin,t=n==null?void 0:n.messages;if(a==="web-scene"&&!p(e)){const l=Q(e,{retainCIM:!0,hasLabelingContext:o});return l.symbol!=null?l.symbol.write(s,n):(t==null||t.push(new c("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in scenes. Use 3D symbology instead when working with WebScene and SceneView`,{symbol:e,context:n,error:l.error})),null)}return(a==="web-map"||a==="portal-item"&&!E(n==null?void 0:n.layer))&&p(e)?(t==null||t.push(new c("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in web maps and portal items. Use 2D symbology and CIMSymbol instead when working with MapView`,{symbol:e,context:n})),null):e.write(s,n)}function ee(e,s){return R(e,null,s)}const V=()=>!!i("enable-feature:force-wosr"),F=()=>i.add("enable-feature:direct-3d-object-feature-layer-display",!0,!0,!0),K=()=>i.add("enable-feature:direct-3d-object-feature-layer-display",!1,!0,!0),W=()=>i.add("enable-i3s-patching",!0,!0,!0),z=()=>i.add("enable-i3s-patching",!1,!0,!0),ne=()=>!!i("enable-feature:SceneLayer-editing"),B=(e="i3s-patching")=>{switch(z(),K(),i.add("enable-feature:SceneLayer-editing",!0,!0,!0),e){case"feature-layer-view":F();break;case"i3s-patching":W()}};B("i3s-patching");let b={};async function X(e,s){try{return{data:(await H(e,s)).data,baseUrl:S(e),styleUrl:e}}catch(r){return A(r),null}}function _(e,s,r){const n=s.portal!=null?s.portal:q.getDefault();let o;const a=`${n.url} - ${n.user&&n.user.username} - ${e}`;return b[a]||(b[a]=G(e,n,r).then(t=>(o=t,t.fetchData())).then(t=>({data:t,baseUrl:o.itemUrl??"",styleName:e}))),b[a]}function G(e,s,r){return s.load(r).then(()=>{const n=new P({disableExtraQuery:!0,query:`owner:${w} AND type:${h} AND typekeywords:"${e}"`});return s.queryItems(n,r)}).then(({results:n})=>{var t;let o=null;const a=e.toLowerCase();if(n&&Array.isArray(n)){for(const l of n)if(((t=l.typeKeywords)==null?void 0:t.some(y=>y.toLowerCase()===a))&&l.type===h&&l.owner===w){o=l;break}}if(!o)throw new c("symbolstyleutils:style-not-found",`The style '${e}' could not be found`,{styleName:e});return o.load(r)})}function te(e,s,r){return(e==null?void 0:e.styleUrl)!=null?X(e.styleUrl,r):(e==null?void 0:e.styleName)!=null?_(e.styleName,s,r):Promise.reject(new c("symbolstyleutils:style-url-and-name-missing","Either styleUrl or styleName is required to resolve a style"))}function se(e){return e===null||e.type==="CIMSymbolReference"?e:{type:"CIMSymbolReference",symbol:e}}function re(e,s,r=["gltf"]){if(s==="cimRef")return e.cimRef;if(e.formatInfos&&!V())for(const n of r){const o=e.formatInfos.find(a=>a.type===n);if(o)return o.href}return e.webRef}function H(e,s){const r={responseType:"json",query:{f:"json"},...s};return N(T(e),r)}const w="esri_en",h="Style",oe="https://cdn.arcgis.com/sharing/rest/content/items/220936cc6ed342c9937abd8f180e7d1e/resources/styles/cim/{SymbolName}.json?f=json";export{ee as a,H as b,te as c,re as d,Z as i,Y as l,ne as n,se as p,oe as w};
