import{ad as y,o as E,b6 as S,b3 as w,aD as d,b as D}from"./index-BdlI2FVT.js";import{$ as h}from"./Mesh-Dxqhvygf.js";import{d as M}from"./georeference-CbXoxBRr.js";import{o as N,i as F}from"./External-BMGwWfm6.js";import{s as T}from"./infoFor3D-DsOdlPuA.js";import{d as b}from"./FeatureSet-BVXviJDD.js";import"./imageUtils-D0Lh5f_H.js";import"./MeshLocalVertexSpace-CqEI9wro.js";import"./meshVertexSpaceUtils-C9bNTGWC.js";import"./vec3-o6_Ds2WY.js";import"./earcut-BqgeR2O3.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./DoubleArray-B-pqbqip.js";import"./Indices-yxjNki2s.js";import"./deduplicate-BGRm7BIO.js";import"./plane-CwsoDe0Y.js";import"./vec42-DpHkGCNS.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./quatf64-Bdb9ZJJK.js";import"./vec2f64-CaE_5U6X.js";import"./vec4f64-CCf6w8sj.js";import"./triangle-CGA-Q9j8.js";import"./Util-BSm5ikH9.js";import"./ObjectStack-gVF13qku.js";import"./lineSegment-6Lyc-O4K.js";import"./basicInterfaces-GbxEOYtk.js";import"./VertexAttribute-BlT9lbVY.js";import"./projection-NmY8Pkrx.js";import"./mat3-e0AQhzgy.js";import"./mat4-CSxAPr-6.js";import"./quat-nUUgiqFL.js";import"./computeTranslationToOriginAndRotation-Xje1tWyk.js";import"./BufferView-DgnOnUs_.js";import"./vec2-DEIrm0UN.js";import"./Field-CcwrtZjp.js";import"./fieldType-CHp3lv4g.js";const l=()=>D.getLogger("esri.rest.support.meshFeatureSet");function yt(t,r,e){const o=e.features;e.features=[],delete e.geometryType;const n=b.fromJSON(e);if(n.geometryType="mesh",!e.assetMaps)return n;const s=$(r,e.assetMaps),i=t.sourceSpatialReference??y.WGS84,p=e.globalIdFieldName,{outFields:a}=t,f=a!=null&&a.length>0?I(a.includes("*")?null:new Set(a)):()=>({});for(const m of o){const u=x(m,p,i,r,s);u!=null&&n.features.push(new E({geometry:u,attributes:f(m)}))}return n}function I(t){return({attributes:r})=>{if(!r)return{};if(!t)return r;for(const e in r)t.has(e)||delete r[e];return r}}function x(t,r,e,o,n){const s=t.attributes[r],i=n.get(s);if(i==null)return l().error("mesh-feature-set:asset-not-found","Service returned a feature which was not found in the asset map",t),null;if(!t.geometry)return l().error("mesh-feature-set:no-geometry","Service returned a feature without geometry",t),null;const p=L(t,e,o),a=S.fromJSON(t.geometry);a.spatialReference=e;const f=O(t.attributes,o),m=e.isGeographic?"local":"georeferenced",u=A(i);return u?h.createWithExternalSource(p,u,{extent:a,transform:f,vertexSpace:m}):h.createIncomplete(p,{extent:a,transform:f,vertexSpace:m})}function L({attributes:t},r,{transformFieldRoles:e}){const o=t[e.originX],n=t[e.originY],s=t[e.originZ];return new w({x:o,y:n,z:s,spatialReference:r})}function O(t,{transformFieldRoles:r}){return new M({translation:[t[r.translationX],-t[r.translationZ],t[r.translationY]],rotationAxis:[t[r.rotationX],-t[r.rotationZ],t[r.rotationY]],rotationAngle:t[r.rotationDeg],scale:[t[r.scaleX],t[r.scaleZ],t[r.scaleY]]})}var c;function $(t,r){const e=new Map;for(const o of r){const n=o.parentGlobalId;if(n==null)continue;const s=o.assetName,i=o.assetType,p=o.assetHash,a=o.assetURL,f=o.conversionStatus,m=o.seqNo,u=T(i,t.supportedFormats);if(!u){l().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${i}, but it does not list it as a supported type`);continue}const g=d(e,n,()=>({files:new Map}));d(g.files,s,()=>({name:s,type:i,mimeType:u,status:P(f),parts:[]})).parts[m]={hash:p,url:a}}return e}function A(t){const r=Array.from(t.files.values()),e=new Array;for(const o of r){if(o.status!==c.COMPLETED)return null;const n=new Array;for(const s of o.parts){if(!s)return null;n.push(new N(s.url,s.hash))}e.push(new F(o.name,o.mimeType,n))}return e}function P(t){switch(t){case"COMPLETED":case"SUBMITTED":return c.COMPLETED;case"INPROGRESS":return c.PENDING;default:return c.FAILED}}(function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"})(c||(c={}));export{$ as assetMapFromAssetMapsJSON,x as extractMesh,yt as meshFeatureSetFromJSON};
