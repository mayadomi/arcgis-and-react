import{b as P,s as se,B as h,gE as he,aX as S,d as me,U as Q,bL as fe,gF as be,gG as ge,f$ as A,f as r,y as l,N as Y,g as M,cY as ve,T as V,gH as we,cy as X,cB as ie,bN as L,cQ as xe,a9 as q,dq as re,dK as Se,K as $e,gI as Ie,cA as oe,gJ as Me,q as Ce,dl as je,X as Pe}from"./index-BdlI2FVT.js";import{v as F,p as E,j as Ne,n as Oe,A as ne,w as le}from"./UniqueValueRenderer-7uqoe5qH.js";import{e as Ee}from"./LRUCache-CZ2xYNgP.js";import{r as De}from"./Version-Cllr3DhQ.js";import{Z as Ve}from"./FieldsIndex-BZm6eFTZ.js";import{o as Re}from"./colorUtils-K6WWckc_.js";import{j as ke,z as W,G as Te,s as _e,l as Ae,v as Le,q as qe}from"./diffUtils-Cvmld_nE.js";import{U as Fe,v as He,q as Ge,k as Be,a as ze,e as Ue,c as Je}from"./heatmapUtils-Xd5ASPFI.js";function Ke(s,e,t,i,n){if(s==null)return null;const o=s.referencesGeometry()&&n?Ze(e,i,n):e,a=s.repurposeFeature(o);try{return s.evaluate({...t,$feature:a},s.services)}catch(p){return P.getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",p),null}}const H=new Map;function Ze(s,e,t){const{transform:i,hasZ:n,hasM:o}=t;H.has(e)||H.set(e,Xe(e));const a=H.get(e)(s.geometry,i,n,o);return{...s,geometry:a}}function Xe(s){const e={};switch(s){case"esriGeometryPoint":return(t,i,n,o)=>Be(i,e,t,n,o);case"esriGeometryPolygon":return(t,i,n,o)=>Ge(i,e,t,n,o);case"esriGeometryPolyline":return(t,i,n,o)=>He(i,e,t,n,o);case"esriGeometryMultipoint":return(t,i,n,o)=>Fe(i,e,t,n,o);default:return P.getLogger("esri.views.2d.support.arcadeOnDemand").error(new se("mapview-arcade",`Unable to handle geometryType: ${s}`)),t=>t}}const Qe=s=>{if(!s)return[0,0,0,0];const{r:e,g:t,b:i,a:n}=s;return[e,t,i,255*n]};let ae=class y{static findApplicableOverrides(e,t,i){if(e&&t){if(e.primitiveName){let n=!1;for(const o of i)if(o.primitiveName===e.primitiveName){n=!0;break}if(!n)for(const o of t)o.primitiveName===e.primitiveName&&i.push(o)}switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const n of e.effects)y.findApplicableOverrides(n,t,i);if(e.symbolLayers)for(const n of e.symbolLayers)y.findApplicableOverrides(n,t,i);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":case"CIMSolidFill":case"CIMPictureFill":case"CIMHatchFill":case"CIMGradientFill":case"CIMVectorMarker":case"CIMCharacterMarker":case"CIMPictureMarker":if(e.effects)for(const n of e.effects)y.findApplicableOverrides(n,t,i);if(e.markerPlacement&&y.findApplicableOverrides(e.markerPlacement,t,i),e.type==="CIMVectorMarker"){if(e.markerGraphics)for(const n of e.markerGraphics)y.findApplicableOverrides(n,t,i),y.findApplicableOverrides(n.symbol,t,i)}else e.type==="CIMCharacterMarker"?y.findApplicableOverrides(e.symbol,t,i):e.type==="CIMHatchFill"?y.findApplicableOverrides(e.lineSymbol,t,i):e.type==="CIMPictureMarker"&&y.findApplicableOverrides(e.animatedSymbolProperties,t,i)}}}static findEffectOverrides(e,t){if(!e)return null;if(e.type==="CIMGeometricEffectDashes"&&ke(e),!t||!e.primitiveName)return{type:"cim-effect-info",effect:e,overrides:[]};const i=e.primitiveName,n=[];for(const o of t)o.primitiveName===i&&n.push({...o,propertyName:W(o.propertyName)});return{type:"cim-effect-info",effect:e,overrides:n}}static async resolveSymbolOverrides(e,t,i,n,o,a,p){if(!(e!=null&&e.symbol))return null;let{symbol:m,primitiveOverrides:u}=e;const C=!!u;if(!C&&!n)return m;m=h(m),u=h(u);let d=!0;if(t||(t={attributes:{}},d=!1),C){if(d||(u=u.filter(f=>{var c;return!((c=f.valueExpressionInfo)!=null&&c.expression.includes("$feature"))})),p||(u=u.filter(f=>{var c;return!((c=f.valueExpressionInfo)!=null&&c.expression.includes("$view"))})),u.length>0){const f={spatialReference:i,fields:Te(t.attributes),geometryType:o};await y.createRenderExpressions(u,f),y.evaluateOverrides(u,t,o??"esriGeometryPoint",a,p)}y.applyOverrides(m,u)}return n&&y.applyDictionaryTextOverrides(m,t,n,null),m}static async createRenderExpressions(e,t){const i=[];for(const n of e){const o=n.valueExpressionInfo;if(!o||y._expressionToRenderExpression.has(o.expression))continue;const a=he(o.expression,t.spatialReference,t.fields);i.push(a),a.then(p=>y._expressionToRenderExpression.set(o.expression,p))}i.length>0&&await Promise.all(i)}static evaluateOverrides(e,t,i,n,o){const a={$view:{scale:o==null?void 0:o.scale}};for(const p of e){p.value&&typeof p.value=="object"&&Re(p.value)&&(p.propertyName==="Color"||p.propertyName==="StrokeColor")&&(p.value=Qe(p.value));const m=p.valueExpressionInfo;if(!m)continue;const u=y._expressionToRenderExpression.get(m.expression);u&&(p.value=Ke(u,t,a,i,n))}}static applyDictionaryTextOverrides(e,t,i,n,o="Normal"){if(e!=null&&e.type)switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":case"CIMTextSymbol":{const a=e.symbolLayers;if(!a)return;for(const p of a)p&&p.type==="CIMVectorMarker"&&y.applyDictionaryTextOverrides(p,t,i,n,e.type==="CIMTextSymbol"?e.textCase:o)}break;case"CIMVectorMarker":{const a=e.markerGraphics;if(!a)return;for(const p of a)p&&y.applyDictionaryTextOverrides(p,t,i,n)}break;case"CIMMarkerGraphic":{const a=e.textString;if(a&&a.includes("[")){const p=_e(a,i);e.textString=Ae(t,p,n,o)}}}}static applyOverrides(e,t,i,n){if(e.primitiveName){for(const o of t)if(o.primitiveName===e.primitiveName){const a=W(o.propertyName);if(n&&n.push({cim:e,nocapPropertyName:a,value:e[a]}),i){let p=!1;for(const m of i)m.primitiveName===e.primitiveName&&(p=!0);p||i.push(o)}o.value!=null&&(e[a]=o.value)}}switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const o of e.effects)y.applyOverrides(o,t,i,n);if(e.symbolLayers)for(const o of e.symbolLayers)y.applyOverrides(o,t,i,n);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMSolidFill":case"CIMVectorMarker":if(e.effects)for(const o of e.effects)y.applyOverrides(o,t,i,n);if(e.type==="CIMVectorMarker"&&e.markerGraphics)for(const o of e.markerGraphics)y.applyOverrides(o,t,i,n),y.applyOverrides(o.symbol,t,i,n)}}static restoreOverrides(e){for(const t of e)t.cim[t.nocapPropertyName]=t.value}static buildOverrideKey(e){let t="";for(const i of e)i.value!==void 0&&(t+=`${i.primitiveName}${i.propertyName}${JSON.stringify(i.value)}`);return t}static toValue(e,t){if(e==="DashTemplate")return t.split(" ").map(i=>Number(i));if(e==="Color"){const i=new S(t).toRgba();return i[3]*=255,i}return t}};ae._expressionToRenderExpression=new Map;const ee="esri.renderers.support.DictionaryLoader",Ye={type:"CIMSimpleLineCallout",lineSymbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",width:.5,color:[0,0,0,255]}]}};class pe{constructor(e,t,i){this.config=null,this.fieldMap=null,this.url=null,this._ongoingRequests=new Map,this._symbolCache=new Ee(100),this._dictionaryVersion=null,this._fieldIndex=null,this._dictionaryPromise=null,this.url=e,this.config=t,this.fieldMap=i}getSymbolFields(){return this._symbolFields}async getSymbolAsync(e,t){let i;this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(t));try{i=await this._dictionaryPromise}catch(d){if(me(d))return this._dictionaryPromise=null,null}const n=this._dictionaryVersion&&this._dictionaryVersion.since(4,0),o={};if(this.fieldMap)for(const d of this._symbolFields){const f=Le(this.fieldMap[d],this._fieldIndex);if(f){const c=e.attributes[f];o[d]=n?c:c!=null?""+e.attributes[f]:""}else o[d]=""}let a=null;try{a=i==null?void 0:i(o,t)}catch{return null}if(!a||typeof a!="string"||a==="invalid")return null;const p=a.split(";"),m=[],u=[];for(const d of p)if(d)if(d.includes("po:")){const f=d.substr(3).split("|");if(f.length===3){const c=f[0],v=f[1];let w=f[2];if(v==="DashTemplate")w=w.split(" ").map($=>Number($));else if(v==="Color"){const $=new S(w).toRgba();w=[$[0],$[1],$[2],255*$[3]]}else w=Number(w);u.push({primitiveName:c,propertyName:v,value:w,defaultValue:null})}}else if(d.includes("|")){for(const f of d.split("|"))if(this._itemNames.has(f)){m.push(f);break}}else this._itemNames.has(d)&&m.push(d);const C=e.geometry==null||!e.geometry.hasZ&&e.geometry.type==="point";return this._cimPartsToCIMSymbol(e,m,u,C,t)}async fetchResources(e){if(this._dictionaryPromise)return this._dictionaryPromise;if(!this.url)return void P.getLogger(ee).error("no valid URL!");const t=Q(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},signal:e!=null?e.signal:null}),[{data:i}]=await Promise.all([t,fe()]);if(!i)throw this._dictionaryPromise=null,new se("esri.renderers.DictionaryRenderer","Bad dictionary data!");const{authoringInfo:n,dictionary_version:o,expression:a,itemsNames:p}=i,m=a;let u=!1;o&&(this._dictionaryVersion=De.parse(o),u=this._dictionaryVersion.since(4,0)),this._refSymbolUrlTemplate=this.url+"/"+i.cimRefTemplateUrl,this._itemNames=new Set(p),this._symbolFields=n.symbol;const C={};if(this.config){const c=this.config;for(const v in c)C[v]=c[v]}if(n.configuration)for(const c of n.configuration)C.hasOwnProperty(c.name)||(C[c.name]=c.value);const d=[];if(e!=null&&e.fields&&this.fieldMap)for(const c in this.fieldMap){const v=this.fieldMap[c],w=e.fields.filter($=>$.name.toLowerCase()===(v==null?void 0:v.toLowerCase()));w.length>0&&d.push({...w[0],type:u?w[0].type:"esriFieldTypeString"})}d.length>0&&(this._fieldIndex=new Ve(d));const f=be(m,e!=null?e.spatialReference:null,d,C).then(c=>{const v={scale:0};return(w,$)=>{if(c==null)return null;const de=c.repurposeFeature({geometry:null,attributes:w});return v.scale=$!=null?$.scale??void 0:void 0,c.evaluate({$feature:de,$view:v},c.services)}}).catch(c=>(P.getLogger(ee).error("Creating dictinoary expression failed:",c),null));return this._dictionaryPromise=f,f}async _cimPartsToCIMSymbol(e,t,i,n,o){const a=new Array(t.length);for(let u=0;u<t.length;u++)a[u]=this._getSymbolPart(t[u],o);let p=await Promise.all(a);const m=this.fieldMap;if(m){p=h(p);for(const u of p)ae.applyDictionaryTextOverrides(u,e,m,this._fieldIndex,qe(u))}return new ge({data:this._combineSymbolParts(p,i,n)})}async _getSymbolPart(e,t){const i=this._symbolCache.get(e);if(i)return i;if(this._ongoingRequests.has(e))return this._ongoingRequests.get(e).then(a=>a.data);const n=this._refSymbolUrlTemplate.replaceAll(/\{itemName\}/gi,e),o=Q(n,{responseType:"json",query:{f:"json"},...t});this._ongoingRequests.set(e,o),o.finally(()=>this._ongoingRequests.delete(e));try{const a=await o;return this._symbolCache.put(e,a.data),a.data}catch(a){throw a}}_combineSymbolParts(e,t,i){if(!e||e.length===0)return null;const n={...e[0]};if(e.length>1){n.symbolLayers=[];for(const o of e){const a=o;n.symbolLayers.unshift(...a.symbolLayers)}}return i&&(n.callout=Ye),{type:"CIMSymbolReference",symbol:n,primitiveOverrides:t}}}var G;let I=G=class extends F(E){constructor(s){super(s),this.config=null,this.fieldMap=null,this.scaleExpression=null,this.scaleExpressionTitle=null,this.url=null,this.type="dictionary"}get _loader(){return new pe(this.url,this.config,this.fieldMap)}writeData(s,e){s&&(e.scalingExpressionInfo={expression:s,returnType:"number"})}writeVisualVariables(s,e,t,i){i!=null&&i.origin||super.writeVisualVariables(s,e,t,i)}clone(){return new G({config:h(this.config),scaleExpression:this.scaleExpression,scaleExpressionTitle:this.scaleExpressionTitle,fieldMap:h(this.fieldMap),url:h(this.url),visualVariables:h(this.visualVariables)})}async getSymbolAsync(s,e){return this._loader.getSymbolAsync(s,e)}async collectRequiredFields(s,e){await this.collectVVRequiredFields(s,e),this.scaleExpression&&await A(s,e,this.scaleExpression);for(const t in this.fieldMap){const i=this.fieldMap[t];e.has(i)&&s.add(i)}}get arcadeRequired(){return!0}getSymbol(){return null}getSymbols(){return[]}getAttributeHash(){return this.visualVariables&&this.visualVariables.reduce((s,e)=>s+e.getAttributeHash(),"")}getMeshHash(){return`${this.url}-${JSON.stringify(this.fieldMap)}`}getSymbolFields(){return this._loader.getSymbolFields()}};r([l({type:pe})],I.prototype,"_loader",null),r([l({type:Object,json:{read:{source:"configuration"},write:{target:"configuration"}}})],I.prototype,"config",void 0),r([l({type:Object,json:{write:!0}})],I.prototype,"fieldMap",void 0),r([l({type:String,json:{read:{source:"scalingExpressionInfo.expression"},write:!0}})],I.prototype,"scaleExpression",void 0),r([Y("scaleExpression")],I.prototype,"writeData",null),r([l({type:String,json:{read:{source:"scalingExpressionInfo.title"},write:{target:"scalingExpressionInfo.title",overridePolicy(s){return{enabled:!!s&&!!this.scaleExpression}}}}})],I.prototype,"scaleExpressionTitle",void 0),r([l({type:String,json:{write:!0}})],I.prototype,"url",void 0),r([Y("visualVariables")],I.prototype,"writeVisualVariables",null),I=G=r([M("esri.renderers.DictionaryRenderer")],I);const We=I;var B;let j=B=class extends V{constructor(s){super(s),this.color=null,this.field=null,this.label=null,this.valueExpression=null,this.valueExpressionTitle=null}castField(s){return s==null?s:typeof s=="function"?(P.getLogger(this).error(".field: field must be a string value"),null):we(s)}getAttributeHash(){return`${this.field}-${this.valueExpression}`}clone(){var s;return new B({color:(s=this.color)==null?void 0:s.clone(),field:this.field,label:this.label,valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle})}};r([l({type:S,json:{type:[Number],write:!0}})],j.prototype,"color",void 0),r([l({type:String,json:{write:!0}})],j.prototype,"field",void 0),r([ve("field")],j.prototype,"castField",null),r([l({type:String,json:{write:!0}})],j.prototype,"label",void 0),r([l({type:String,json:{write:!0}})],j.prototype,"valueExpression",void 0),r([l({type:String,json:{write:!0}})],j.prototype,"valueExpressionTitle",void 0),j=B=r([M("esri.renderers.support.AttributeColorInfo")],j);const ue=j;var z;let k=z=class extends V{constructor(){super(...arguments),this.unit=null}clone(){return new z({unit:this.unit})}};r([l({type:String,json:{write:!0}})],k.prototype,"unit",void 0),k=z=r([M("esri.renderers.support.DotDensityLegendOptions")],k);const et=k;var U;let g=U=class extends F(E){constructor(s){super(s),this.attributes=null,this.backgroundColor=new S([0,0,0,0]),this.dotBlendingEnabled=!0,this.dotShape="square",this.dotSize=1,this.legendOptions=null,this.outline=new X,this.dotValue=null,this.referenceScale=null,this.seed=1,this.type="dot-density"}calculateDotValue(s){if(this.referenceScale==null)return this.dotValue;const e=s/this.referenceScale*this.dotValue;return e<1?1:e}getSymbol(){return new ie({outline:this.outline})}async getSymbolAsync(){return this.getSymbol()}getSymbols(){return[this.getSymbol()]}getAttributeHash(){var s;return((s=this.attributes)==null?void 0:s.reduce((e,t)=>e+t.getAttributeHash(),""))??""}getMeshHash(){return JSON.stringify(this.outline)}clone(){return new U({attributes:h(this.attributes),backgroundColor:h(this.backgroundColor),dotBlendingEnabled:h(this.dotBlendingEnabled),dotShape:h(this.dotShape),dotSize:h(this.dotSize),dotValue:h(this.dotValue),legendOptions:h(this.legendOptions),outline:h(this.outline),referenceScale:h(this.referenceScale),seed:h(this.seed),visualVariables:h(this.visualVariables),authoringInfo:this.authoringInfo&&this.authoringInfo.clone()})}getControllerHash(){var e;return`${(e=this.attributes)==null?void 0:e.map(t=>t.field||t.valueExpression||"")}-${this.outline&&JSON.stringify(this.outline.toJSON())||""}`}async collectRequiredFields(s,e){await this.collectVVRequiredFields(s,e);for(const t of this.attributes??[])t.valueExpression&&await A(s,e,t.valueExpression),t.field&&s.add(t.field)}};r([l({type:[ue],json:{write:!0}})],g.prototype,"attributes",void 0),r([l({type:S,json:{write:!0}})],g.prototype,"backgroundColor",void 0),r([l({type:Boolean,json:{write:!0}})],g.prototype,"dotBlendingEnabled",void 0),r([l({type:String,json:{write:!1}})],g.prototype,"dotShape",void 0),r([l({type:Number,json:{write:!0}})],g.prototype,"dotSize",void 0),r([l({type:et,json:{write:!0}})],g.prototype,"legendOptions",void 0),r([l({type:X,json:{default:null,write:!0}})],g.prototype,"outline",void 0),r([l({type:Number,json:{write:!0}})],g.prototype,"dotValue",void 0),r([l({type:Number,json:{write:!0}})],g.prototype,"referenceScale",void 0),r([l({type:Number,json:{write:!0}})],g.prototype,"seed",void 0),r([L({dotDensity:"dot-density"})],g.prototype,"type",void 0),g=U=r([M("esri.renderers.DotDensityRenderer")],g);const tt=g;var J;let R=J=class extends V{constructor(s){super(s),this.color=null,this.ratio=null}clone(){return new J({color:this.color&&this.color.clone(),ratio:this.ratio})}};r([l({type:S,json:{type:[xe],default:null,write:!0}})],R.prototype,"color",void 0),r([l({type:Number,json:{write:!0}})],R.prototype,"ratio",void 0),R=J=r([M("esri.renderers.support.HeatmapColorStop")],R);const T=R;let D=class extends q(V){constructor(){super(...arguments),this.minLabel=null,this.maxLabel=null,this.title=null}};r([l({type:String,json:{write:!0}})],D.prototype,"minLabel",void 0),r([l({type:String,json:{write:!0}})],D.prototype,"maxLabel",void 0),r([l({type:String,json:{write:!0}})],D.prototype,"title",void 0),D=r([M("esri.renderers.support.HeatmapLegendOptions")],D);var K;function te(s){if(s!=null){const{maxDensity:e,minDensity:t,radius:i}=s;if(e!=null||t!=null||i!=null){const{blurRadius:n,maxPixelIntensity:o,minPixelIntensity:a,...p}=s;return p}}return s}let b=K=class extends E{constructor(s){super(s),this.authoringInfo=null,this.colorStops=[new T({ratio:0,color:new S("rgba(255, 140, 0, 0)")}),new T({ratio:.75,color:new S("rgba(255, 140, 0, 1)")}),new T({ratio:.9,color:new S("rgba(255, 0,   0, 1)")})],this.field=null,this.legendOptions=null,this.maxDensity=.04,this.minDensity=0,this.radius=18,this.referenceScale=0,this.type="heatmap",this.valueExpression=null,this.valueExpressionTitle=null,this._warnedProps={blurRadius:!1,maxPixelIntensity:!1,minPixelIntensity:!1}}normalizeCtorArgs(s){return te(s)}get blurRadius(){return ze(this.radius)}set blurRadius(s){const e=this.maxPixelIntensity,t=this.minPixelIntensity;this._set("radius",Ue(s)),this._warnAboutDeprecatedGaussianBlurProp("blurRadius","radius"),this._set("maxDensity",e*this._pixelIntensityToDensity),this._set("minDensity",t*this._pixelIntensityToDensity)}get maxPixelIntensity(){return this.maxDensity/this._pixelIntensityToDensity}set maxPixelIntensity(s){this._set("maxDensity",s*this._pixelIntensityToDensity),this._warnAboutDeprecatedGaussianBlurProp("maxPixelIntensity","maxDensity")}get minPixelIntensity(){return this.minDensity/this._pixelIntensityToDensity}set minPixelIntensity(s){this._set("minDensity",s*this._pixelIntensityToDensity),this._warnAboutDeprecatedGaussianBlurProp("minPixelIntensity","minDensity")}get _pixelIntensityToDensity(){return 24/(Je**2*this.blurRadius**4)}_warnAboutDeprecatedGaussianBlurProp(s,e){this._warnedProps[s]||Se(this).getDefaultOrigin()==="user"&&(this._warnedProps[s]=!0,$e(()=>{Ie(P.getLogger(this),s,{replacement:`${String(e)} (suggested value: ${this._get(e)})`,version:"4.24"})}))}read(s,e){s=te(s),super.read(s,e)}getSymbol(){return new oe}async getSymbolAsync(){return this.getSymbol()}getSymbols(){return[this.getSymbol()]}async collectRequiredFields(s,e){const t=this.field,i=this.valueExpression;t&&typeof t=="string"&&Me(s,e,t),i&&typeof i=="string"&&await A(s,e,i)}getAttributeHash(){return null}getMeshHash(){return`${JSON.stringify(this.colorStops)}.${this.blurRadius}.${this.field}`}clone(){return new K({authoringInfo:this.authoringInfo&&this.authoringInfo.clone(),colorStops:h(this.colorStops),field:this.field,legendOptions:h(this.legendOptions),maxDensity:this.maxDensity,minDensity:this.minDensity,radius:this.radius,referenceScale:this.referenceScale,valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle})}};r([l({type:Ne,json:{write:!0,origins:{"web-scene":{write:!1,read:!1}}}})],b.prototype,"authoringInfo",void 0),r([l({type:Number,json:{origins:{"portal-item":{write:!0},"web-map":{write:!0}}}})],b.prototype,"blurRadius",null),r([l({type:[T],json:{write:!0}})],b.prototype,"colorStops",void 0),r([l({type:String,json:{write:!0}})],b.prototype,"field",void 0),r([l({type:D,json:{write:!0}})],b.prototype,"legendOptions",void 0),r([l({type:Number,json:{write:!0}})],b.prototype,"maxDensity",void 0),r([l({type:Number,json:{origins:{"portal-item":{write:!0},"web-map":{write:!0}}}})],b.prototype,"maxPixelIntensity",null),r([l({type:Number,json:{write:!0}})],b.prototype,"minDensity",void 0),r([l({type:Number,json:{origins:{"portal-item":{write:!0},"web-map":{write:!0}}}})],b.prototype,"minPixelIntensity",null),r([l({type:Number,cast:re,json:{write:!0}})],b.prototype,"radius",void 0),r([l({type:Number,range:{min:0},json:{default:0,write:!0}})],b.prototype,"referenceScale",void 0),r([L({heatmap:"heatmap"})],b.prototype,"type",void 0),r([l({type:String,json:{write:!0,origins:{"web-document":{write:!1},"portal-item":{write:!1}}}})],b.prototype,"valueExpression",void 0),r([l({type:String})],b.prototype,"valueExpressionTitle",void 0),r([l({readOnly:!0})],b.prototype,"_pixelIntensityToDensity",null),b=K=r([M("esri.renderers.HeatmapRenderer")],b);const ce=b;let O=class extends q(V){constructor(){super(...arguments),this.color=new S([0,0,0,0]),this.label=null,this.threshold=0}};r([l({type:S,json:{write:!0}})],O.prototype,"color",void 0),r([l({type:String,json:{write:!0}})],O.prototype,"label",void 0),r([l({type:Number,range:{min:0,max:1},json:{write:!0}})],O.prototype,"threshold",void 0),O=r([M("esri.renderers.support.OthersCategory")],O);let _=class extends q(V){constructor(){super(...arguments),this.title=null}};r([l({type:String,json:{write:!0}})],_.prototype,"title",void 0),_=r([M("esri.renderers.support.PieChartLegendOptions")],_);let x=class extends F(q(E)){constructor(e){super(e),this.attributes=null,this.backgroundFillSymbol=null,this.defaultColor=new S([0,0,0,0]),this.defaultLabel=null,this.holePercentage=0,this.othersCategory=new O,this.legendOptions=null,this.outline=null,this.size=12,this.type="pie-chart"}getSymbol(){var e;return new oe({size:this.size?this.size/2+(((e=this.outline)==null?void 0:e.width)||0):0})}async getSymbolAsync(){return this.getSymbol()}getSymbols(){return[this.getSymbol(),this.backgroundFillSymbol].filter(Ce)}getAttributeHash(){return this.visualVariables&&this.visualVariables.reduce((e,t)=>e+t.getAttributeHash(),"")}getMeshHash(){return this.getSymbols().reduce((e,t)=>e+JSON.stringify(t),"")}async collectRequiredFields(e,t){await this.collectVVRequiredFields(e,t);for(const i of this.attributes)i.valueExpression&&await A(e,t,i.valueExpression),i.field&&e.add(i.field)}};r([l({type:[ue],json:{write:!0}})],x.prototype,"attributes",void 0),r([l({type:ie,json:{default:null,write:!0}})],x.prototype,"backgroundFillSymbol",void 0),r([l({type:S,json:{write:!0}})],x.prototype,"defaultColor",void 0),r([l({type:String,json:{write:!0}})],x.prototype,"defaultLabel",void 0),r([l({type:Number,range:{min:0,max:1},json:{write:!0}})],x.prototype,"holePercentage",void 0),r([l({type:O,json:{write:!0}})],x.prototype,"othersCategory",void 0),r([l({type:_,json:{write:!0}})],x.prototype,"legendOptions",void 0),r([l({type:X,json:{default:null,write:!0}})],x.prototype,"outline",void 0),r([l({type:Number,cast:re,json:{write:!0}})],x.prototype,"size",void 0),r([L({pieChart:"pie-chart"})],x.prototype,"type",void 0),x=r([M("esri.renderers.PieChartRenderer")],x);const st=x;var Z;let N=Z=class extends F(E){constructor(s){super(s),this.description=null,this.label=null,this.symbol=null,this.type="simple"}async collectRequiredFields(s,e){await Promise.all([this.collectSymbolFields(s,e),this.collectVVRequiredFields(s,e)])}async collectSymbolFields(s,e){await Promise.all(this.getSymbols().map(t=>t.collectRequiredFields(s,e)))}getSymbol(s,e){return this.symbol}async getSymbolAsync(s,e){return this.symbol}getSymbols(){return this.symbol?[this.symbol]:[]}getAttributeHash(){return this.visualVariables&&this.visualVariables.reduce((s,e)=>s+e.getAttributeHash(),"")}getMeshHash(){return this.getSymbols().reduce((s,e)=>s+JSON.stringify(e),"")}get arcadeRequired(){return this.arcadeRequiredForVisualVariables}clone(){return new Z({description:this.description,label:this.label,symbol:this.symbol&&this.symbol.clone(),visualVariables:h(this.visualVariables),authoringInfo:this.authoringInfo&&this.authoringInfo.clone()})}};r([l({type:String,json:{write:!0}})],N.prototype,"description",void 0),r([l({type:String,json:{write:!0}})],N.prototype,"label",void 0),r([l(Oe)],N.prototype,"symbol",void 0),r([L({simple:"simple"})],N.prototype,"type",void 0),N=Z=r([M("esri.renderers.SimpleRenderer")],N);const ye=N,it={key:"type",base:E,typeMap:{heatmap:ce,simple:ye,"unique-value":ne,"class-breaks":le,"dot-density":tt,dictionary:We,"pie-chart":st},errorContext:"renderer"},xt={key:"type",base:E,typeMap:{simple:ye,"unique-value":ne,"class-breaks":le,heatmap:ce},errorContext:"renderer",validate:rt};function rt(s){switch(s.type){case"simple":return ot(s);case"unique-value":return nt(s);case"class-breaks":return lt(s);case"heatmap":return s}}function ot(s){if(s.symbol)return s;P.getLogger("esri.renderers.support.types").error("Removed invalid 'simple' renderer without a symbol from web scene.")}function nt(s){const e=s.uniqueValueInfos,t=e==null?void 0:e.filter(({symbol:i,label:n},o)=>(i||P.getLogger("esri.renderers.support.types").error(`Removed invalid unique value info ([${o}] ${n}) without a symbol from web scene.`),!!i));return(t==null?void 0:t.length)!==(e==null?void 0:e.length)&&(s.uniqueValueInfos=t),s}function lt(s){const e=s.classBreakInfos,t=e==null?void 0:e.filter(({symbol:i,label:n},o)=>(i||P.getLogger("esri.renderers.support.types").error(`Removed invalid class break info ([${o}] ${n}) without a symbol from web scene.`),!!i));return(t==null?void 0:t.length)!==(e==null?void 0:e.length)&&(s.classBreakInfos=t),s}function St(s,e){return pt(s,null,e)}const at=je({types:it});function pt(s,e,t){return s?s&&(s.styleName||s.styleUrl)&&s.type!=="uniqueValue"?(t!=null&&t.messages&&t.messages.push(new Pe("renderer:unsupported","Only UniqueValueRenderer can be referenced from a web style, but found '"+s.type+"'",{definition:s,context:t})),null):at(s,e,t):null}export{it as a,ae as f,T as l,ye as m,pt as o,St as t,xt as u};
