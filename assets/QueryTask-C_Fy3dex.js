const __vite__fileDeps=["assets/meshFeatureSet-D9xLfOaj.js","assets/index-BdlI2FVT.js","assets/index-DQMU5mn_.css","assets/Mesh-Dxqhvygf.js","assets/georeference-CbXoxBRr.js","assets/mat3f64-q3fE-ZOt.js","assets/mat4-CSxAPr-6.js","assets/mat4f64-CSKppSlJ.js","assets/mat3-e0AQhzgy.js","assets/projection-NmY8Pkrx.js","assets/computeTranslationToOriginAndRotation-Xje1tWyk.js","assets/DoubleArray-B-pqbqip.js","assets/quat-nUUgiqFL.js","assets/quatf64-Bdb9ZJJK.js","assets/vec42-DpHkGCNS.js","assets/vec4f64-CCf6w8sj.js","assets/meshVertexSpaceUtils-C9bNTGWC.js","assets/MeshLocalVertexSpace-CqEI9wro.js","assets/vec3-o6_Ds2WY.js","assets/BufferView-DgnOnUs_.js","assets/vec2-DEIrm0UN.js","assets/imageUtils-D0Lh5f_H.js","assets/earcut-BqgeR2O3.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/Indices-yxjNki2s.js","assets/deduplicate-BGRm7BIO.js","assets/plane-CwsoDe0Y.js","assets/vec2f64-CaE_5U6X.js","assets/triangle-CGA-Q9j8.js","assets/Util-BSm5ikH9.js","assets/ObjectStack-gVF13qku.js","assets/lineSegment-6Lyc-O4K.js","assets/basicInterfaces-GbxEOYtk.js","assets/VertexAttribute-BlT9lbVY.js","assets/External-BMGwWfm6.js","assets/infoFor3D-DsOdlPuA.js","assets/FeatureSet-BVXviJDD.js","assets/Field-CcwrtZjp.js","assets/fieldType-CHp3lv4g.js","assets/RelationshipQuery-BllPoPyE.js","assets/Query-C67dhdyp.js","assets/commonProperties-DDhb4E0s.js","assets/executeRelationshipQuery-w45o3nEX.js","assets/utils-nisnNviQ.js","assets/query-gDdM8KJG.js","assets/normalizeUtils-Cik6ve5l.js","assets/normalizeUtilsCommon-Cpq7p5az.js","assets/pbfQueryUtils-2_EOj78-.js","assets/pbf-vQQtfZjw.js","assets/OptimizedGeometry-CQuTPb9g.js","assets/OptimizedFeatureSet-Blu9Ckm7.js","assets/queryZScale-DxngEzoS.js","assets/queryAttachments-Bdj6Jc2O.js","assets/AttachmentInfo-CE-G8Bgm.js","assets/executeTopFeaturesQuery-nTAmDxcu.js","assets/queryTopFeatures-xQhgjlA9.js","assets/TopFeaturesQuery-o_i6H2-K.js","assets/executeForTopIds-50RzEcaO.js","assets/executeForTopExtents-B6Rz2iZF.js","assets/executeForTopCount-BUGfPfFG.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{b6 as T,f as a,y as l,g as A,S as w,I as N,aa as Q,dF as d,$ as n,s as P}from"./index-BdlI2FVT.js";import{u as f,i as y}from"./infoFor3D-DsOdlPuA.js";import{b as h,K as _}from"./Query-C67dhdyp.js";import{f as S}from"./utils-nisnNviQ.js";import{n as j,s as q}from"./executeForIds-DOReORur.js";import{x as L}from"./query-gDdM8KJG.js";import{a as J}from"./executeQueryJSON-DQvHyqrp.js";import{n as $}from"./executeQueryPBF-u_spJMXj.js";import{d as z}from"./FeatureSet-BVXviJDD.js";async function C(e,t,r){const o=S(e),u=await L(o,h.from(t),{...r}),i=u.data.extent;return!i||isNaN(i.xmin)||isNaN(i.ymin)||isNaN(i.xmax)||isNaN(i.ymax)?{count:u.data.count,extent:null}:{count:u.data.count,extent:T.fromJSON(i)}}let s=class extends w{constructor(e){super(e),this.dynamicDataSource=null,this.fieldsIndex=null,this.gdbVersion=null,this.infoFor3D=null,this.pbfSupported=!1,this.queryAttachmentsSupported=!1,this.sourceSpatialReference=null,this.url=null}get parsedUrl(){return N(this.url)}async execute(e,t){const r=await this.executeJSON(e,t);return this.featureSetFromJSON(e,r,t)}async executeJSON(e,t){var c;const r=this._normalizeQuery(e),o=((c=e.outStatistics)==null?void 0:c[0])!=null,u=Q("featurelayer-pbf-statistics"),i=!o||u;let p;if(this.pbfSupported&&i)try{p=await $(this.url,r,t)}catch(m){if(m.name!=="query:parsing-pbf")throw m;this.pbfSupported=!1}return this.pbfSupported&&i||(p=await J(this.url,r,t)),this._normalizeFields(p.fields),p}async featureSetFromJSON(e,t,r){if(!this._queryIs3DObjectFormat(e)||this.infoFor3D==null||!t.features)return z.fromJSON(t);const{meshFeatureSetFromJSON:o}=await d(n(()=>import("./meshFeatureSet-D9xLfOaj.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38])),r);return o(e,this.infoFor3D,t)}executeForCount(e,t){return j(this.url,this._normalizeQuery(e),t)}executeForExtent(e,t){return C(this.url,this._normalizeQuery(e),t)}executeForIds(e,t){return q(this.url,this._normalizeQuery(e),t)}async executeRelationshipQuery(e,t){const[{default:r},{executeRelationshipQuery:o}]=await d(Promise.all([n(()=>import("./RelationshipQuery-BllPoPyE.js"),__vite__mapDeps([39,1,2,40,41,37,38])),n(()=>import("./executeRelationshipQuery-w45o3nEX.js"),__vite__mapDeps([42,43,1,2,44,45,46,47,48,49,50,51,9,36,37,38,39,40,41]))]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),o(this.url,e,t)}async executeRelationshipQueryForCount(e,t){const[{default:r},{executeRelationshipQueryForCount:o}]=await d(Promise.all([n(()=>import("./RelationshipQuery-BllPoPyE.js"),__vite__mapDeps([39,1,2,40,41,37,38])),n(()=>import("./executeRelationshipQuery-w45o3nEX.js"),__vite__mapDeps([42,43,1,2,44,45,46,47,48,49,50,51,9,36,37,38,39,40,41]))]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),o(this.url,e,t)}async executeAttachmentQuery(e,t){const{executeAttachmentQuery:r,fetchAttachments:o,processAttachmentQueryResult:u}=await d(n(()=>import("./queryAttachments-Bdj6Jc2O.js"),__vite__mapDeps([52,1,2,44,45,46,43,47,48,49,50,51,9,53])),t),i=S(this.url);return u(i,await(this.queryAttachmentsSupported?r(i,e,t):o(i,e,t)))}async executeTopFeaturesQuery(e,t){const{executeTopFeaturesQuery:r}=await d(n(()=>import("./executeTopFeaturesQuery-nTAmDxcu.js"),__vite__mapDeps([54,43,1,2,55,45,46,44,47,48,49,50,51,9,36,37,38,56,41])),t);return r(this.parsedUrl,e,this.sourceSpatialReference,t)}async executeForTopIds(e,t){const{executeForTopIds:r}=await d(n(()=>import("./executeForTopIds-50RzEcaO.js"),__vite__mapDeps([57,43,1,2,55,45,46,44,47,48,49,50,51,9,56,41])),t);return r(this.parsedUrl,e,t)}async executeForTopExtents(e,t){const{executeForTopExtents:r}=await d(n(()=>import("./executeForTopExtents-B6Rz2iZF.js"),__vite__mapDeps([58,1,2,43,55,45,46,44,47,48,49,50,51,9,56,41])),t);return r(this.parsedUrl,e,t)}async executeForTopCount(e,t){const{executeForTopCount:r}=await d(n(()=>import("./executeForTopCount-BUGfPfFG.js"),__vite__mapDeps([59,43,1,2,55,45,46,44,47,48,49,50,51,9,56,41])),t);return r(this.parsedUrl,e,t)}_normalizeQuery(e){let t=h.from(e);t.sourceSpatialReference=t.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(t=t===e?t.clone():t,t.gdbVersion=e.gdbVersion||this.gdbVersion,t.dynamicDataSource=e.dynamicDataSource?_.from(e.dynamicDataSource):this.dynamicDataSource);const{infoFor3D:r}=this;if(r!=null&&this._queryIs3DObjectFormat(e)){t=t===e?t.clone():t,t.formatOf3DObjects=null;const{supportedFormats:o,queryFormats:u}=r,i=f("model/gltf-binary",o)??y("glb",o),p=f("model/gltf+json",o)??y("gltf",o);for(const c of u){if(c===i){t.formatOf3DObjects=c;break}c!==p||t.formatOf3DObjects||(t.formatOf3DObjects=c)}if(!t.formatOf3DObjects)throw new P("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(t.outFields==null||!t.outFields.includes("*")){t=t===e?t.clone():t,t.outFields==null&&(t.outFields=[]);const{originX:c,originY:m,originZ:D,translationX:x,translationY:F,translationZ:b,scaleX:O,scaleY:g,scaleZ:V,rotationX:E,rotationY:R,rotationZ:I,rotationDeg:v}=r.transformFieldRoles;t.outFields.push(c,m,D,x,F,b,O,g,V,E,R,I,v)}}return t}_normalizeFields(e){if(this.fieldsIndex!=null&&e!=null)for(const t of e){const r=this.fieldsIndex.get(t.name);r&&Object.assign(t,r.toJSON())}}_queryIs3DObjectFormat(e){return this.infoFor3D!=null&&e.returnGeometry===!0&&e.multipatchOption!=="xyFootprint"&&!e.outStatistics}};a([l({type:_})],s.prototype,"dynamicDataSource",void 0),a([l()],s.prototype,"fieldsIndex",void 0),a([l()],s.prototype,"gdbVersion",void 0),a([l()],s.prototype,"infoFor3D",void 0),a([l({readOnly:!0})],s.prototype,"parsedUrl",null),a([l()],s.prototype,"pbfSupported",void 0),a([l()],s.prototype,"queryAttachmentsSupported",void 0),a([l()],s.prototype,"sourceSpatialReference",void 0),a([l({type:String})],s.prototype,"url",void 0),s=a([A("esri.tasks.QueryTask")],s);const H=s;export{H as x};
